// Copyright Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Generated code exported from UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "UObject/GeneratedCppIncludes.h"
#include "PlayFab/Classes/PlayFabMultiplayerModels.h"
#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable : 4883)
#endif
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodePlayFabMultiplayerModels() {}
// Cross Module References
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest();
	UPackage* Z_Construct_UPackage__Script_PlayFab();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FPlayFabRequestCommon();
	PLAYFAB_API UClass* Z_Construct_UClass_UPlayFabJsonObject_NoRegister();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FPlayFabResultCommon();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EContainerFlavor();
	PLAYFAB_API UEnum* Z_Construct_UEnum_PlayFab_EAzureVmSize();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult();
	PLAYFAB_API UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest();
// End Cross Module References

static_assert(std::is_polymorphic<FMultiplayerUploadCertificateRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUploadCertificateRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUploadCertificateRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUploadCertificateRequest"), sizeof(FMultiplayerUploadCertificateRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUploadCertificateRequest>()
{
	return FMultiplayerUploadCertificateRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUploadCertificateRequest(FMultiplayerUploadCertificateRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUploadCertificateRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUploadCertificateRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUploadCertificateRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUploadCertificateRequest>(FName(TEXT("MultiplayerUploadCertificateRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUploadCertificateRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificate_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificate;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Uploads a multiplayer server game certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Uploads a multiplayer server game certificate." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUploadCertificateRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUploadCertificateRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificate to upload. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificate to upload." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate = { "GameCertificate", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUploadCertificateRequest, GameCertificate), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::NewProp_GameCertificate,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUploadCertificateRequest",
		sizeof(FMultiplayerUploadCertificateRequest),
		alignof(FMultiplayerUploadCertificateRequest),
		Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUploadCertificateRequest"), sizeof(FMultiplayerUploadCertificateRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUploadCertificateRequest_Hash() { return 316704077U; }

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildRegionsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildRegionsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUpdateBuildRegionsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildRegionsRequest"), sizeof(FMultiplayerUpdateBuildRegionsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildRegionsRequest>()
{
	return FMultiplayerUpdateBuildRegionsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest(FMultiplayerUpdateBuildRegionsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUpdateBuildRegionsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUpdateBuildRegionsRequest>(FName(TEXT("MultiplayerUpdateBuildRegionsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildRegions_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildRegions_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildRegions;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's regions. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's regions." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildRegionsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_Inner = { "BuildRegions", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The updated region configuration that should be applied to the specified build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The updated region configuration that should be applied to the specified build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions = { "BuildRegions", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, BuildRegions), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_BuildRegions,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildRegionsRequest",
		sizeof(FMultiplayerUpdateBuildRegionsRequest),
		alignof(FMultiplayerUpdateBuildRegionsRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUpdateBuildRegionsRequest"), sizeof(FMultiplayerUpdateBuildRegionsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionsRequest_Hash() { return 2577496429U; }

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildRegionRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildRegionRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUpdateBuildRegionRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildRegionRequest"), sizeof(FMultiplayerUpdateBuildRegionRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildRegionRequest>()
{
	return FMultiplayerUpdateBuildRegionRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest(FMultiplayerUpdateBuildRegionRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUpdateBuildRegionRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUpdateBuildRegionRequest>(FName(TEXT("MultiplayerUpdateBuildRegionRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildRegionRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildRegion_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildRegion;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildRegionRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The updated region configuration that should be applied to the specified build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The updated region configuration that should be applied to the specified build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion = { "BuildRegion", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, BuildRegion), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildRegionRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_BuildRegion,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildRegionRequest",
		sizeof(FMultiplayerUpdateBuildRegionRequest),
		alignof(FMultiplayerUpdateBuildRegionRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUpdateBuildRegionRequest"), sizeof(FMultiplayerUpdateBuildRegionRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildRegionRequest_Hash() { return 1090345885U; }

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildNameRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildNameRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUpdateBuildNameRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildNameRequest"), sizeof(FMultiplayerUpdateBuildNameRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildNameRequest>()
{
	return FMultiplayerUpdateBuildNameRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUpdateBuildNameRequest(FMultiplayerUpdateBuildNameRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUpdateBuildNameRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildNameRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildNameRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUpdateBuildNameRequest>(FName(TEXT("MultiplayerUpdateBuildNameRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildNameRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Updates a multiplayer server build's name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Updates a multiplayer server build's name." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildNameRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update the name of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update the name of." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildNameRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildNameRequest",
		sizeof(FMultiplayerUpdateBuildNameRequest),
		alignof(FMultiplayerUpdateBuildNameRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUpdateBuildNameRequest"), sizeof(FMultiplayerUpdateBuildNameRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildNameRequest_Hash() { return 4244332117U; }

static_assert(std::is_polymorphic<FMultiplayerUpdateBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUpdateBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUpdateBuildAliasRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUpdateBuildAliasRequest"), sizeof(FMultiplayerUpdateBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUpdateBuildAliasRequest>()
{
	return FMultiplayerUpdateBuildAliasRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest(FMultiplayerUpdateBuildAliasRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUpdateBuildAliasRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildAliasRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildAliasRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUpdateBuildAliasRequest>(FName(TEXT("MultiplayerUpdateBuildAliasRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUpdateBuildAliasRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build alias and returns the created alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build alias and returns the created alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUpdateBuildAliasRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias Id of the alias to be updated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias Id of the alias to be updated." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUpdateBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_AliasName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUpdateBuildAliasRequest",
		sizeof(FMultiplayerUpdateBuildAliasRequest),
		alignof(FMultiplayerUpdateBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUpdateBuildAliasRequest"), sizeof(FMultiplayerUpdateBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUpdateBuildAliasRequest_Hash() { return 1237959347U; }

static_assert(std::is_polymorphic<FMultiplayerUntagContainerImageRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerUntagContainerImageRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerUntagContainerImageRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerUntagContainerImageRequest"), sizeof(FMultiplayerUntagContainerImageRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerUntagContainerImageRequest>()
{
	return FMultiplayerUntagContainerImageRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerUntagContainerImageRequest(FMultiplayerUntagContainerImageRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerUntagContainerImageRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUntagContainerImageRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUntagContainerImageRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerUntagContainerImageRequest>(FName(TEXT("MultiplayerUntagContainerImageRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerUntagContainerImageRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ImageName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Tag_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Tag;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Removes the specified tag from the image. After this operation, a 'docker pull' will fail for the specified image and\n * tag combination. Morever, ListContainerImageTags will not return the specified tag.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes the specified tag from the image. After this operation, a 'docker pull' will fail for the specified image and\ntag combination. Morever, ListContainerImageTags will not return the specified tag." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerUntagContainerImageRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container image which tag we want to remove. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container image which tag we want to remove." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The tag we want to remove. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The tag we want to remove." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag = { "Tag", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerUntagContainerImageRequest, Tag), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_ImageName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::NewProp_Tag,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerUntagContainerImageRequest",
		sizeof(FMultiplayerUntagContainerImageRequest),
		alignof(FMultiplayerUntagContainerImageRequest),
		Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerUntagContainerImageRequest"), sizeof(FMultiplayerUntagContainerImageRequest), Get_Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerUntagContainerImageRequest_Hash() { return 2679770201U; }

static_assert(std::is_polymorphic<FMultiplayerShutdownMultiplayerServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerShutdownMultiplayerServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerShutdownMultiplayerServerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerShutdownMultiplayerServerRequest"), sizeof(FMultiplayerShutdownMultiplayerServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerShutdownMultiplayerServerRequest>()
{
	return FMultiplayerShutdownMultiplayerServerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest(FMultiplayerShutdownMultiplayerServerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerShutdownMultiplayerServerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerShutdownMultiplayerServerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerShutdownMultiplayerServerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerShutdownMultiplayerServerRequest>(FName(TEXT("MultiplayerShutdownMultiplayerServerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerShutdownMultiplayerServerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK\n * will allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes\n * have elapsed, the multiplayer server session will be forcefully terminated on it's own.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Executes the shutdown callback from the GSDK and terminates the multiplayer server session. The callback in the GSDK\nwill allow for graceful shutdown with a 15 minute timeoutIf graceful shutdown has not been completed before 15 minutes\nhave elapsed, the multiplayer server session will be forcefully terminated on it's own." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerShutdownMultiplayerServerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the multiplayer server to shut down. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the multiplayer server to shut down." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A guid string session ID of the multiplayer server to shut down. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A guid string session ID of the multiplayer server to shut down." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerShutdownMultiplayerServerRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::NewProp_SessionId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerShutdownMultiplayerServerRequest",
		sizeof(FMultiplayerShutdownMultiplayerServerRequest),
		alignof(FMultiplayerShutdownMultiplayerServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerShutdownMultiplayerServerRequest"), sizeof(FMultiplayerShutdownMultiplayerServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerShutdownMultiplayerServerRequest_Hash() { return 2650351550U; }

static_assert(std::is_polymorphic<FMultiplayerRolloverContainerRegistryCredentialsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerRolloverContainerRegistryCredentialsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse"), sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRolloverContainerRegistryCredentialsResponse>()
{
	return FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse(FMultiplayerRolloverContainerRegistryCredentialsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsResponse>(FName(TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_DnsName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_DnsName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The url of the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The url of the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName = { "DnsName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, DnsName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The password for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The password for accessing the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for accessing the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_DnsName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Password,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::NewProp_Username,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerRolloverContainerRegistryCredentialsResponse",
		sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse),
		alignof(FMultiplayerRolloverContainerRegistryCredentialsResponse),
		Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerRolloverContainerRegistryCredentialsResponse"), sizeof(FMultiplayerRolloverContainerRegistryCredentialsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsResponse_Hash() { return 1666484655U; }

static_assert(std::is_polymorphic<FMultiplayerRolloverContainerRegistryCredentialsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRolloverContainerRegistryCredentialsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest"), sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRolloverContainerRegistryCredentialsRequest>()
{
	return FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest(FMultiplayerRolloverContainerRegistryCredentialsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsRequest>(FName(TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRolloverContainerRegistryCredentialsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets new credentials to the container registry where game developers can upload custom container images to before\n * creating a new build.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets new credentials to the container registry where game developers can upload custom container images to before\ncreating a new build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRolloverContainerRegistryCredentialsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRolloverContainerRegistryCredentialsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRolloverContainerRegistryCredentialsRequest",
		sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest),
		alignof(FMultiplayerRolloverContainerRegistryCredentialsRequest),
		Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerRolloverContainerRegistryCredentialsRequest"), sizeof(FMultiplayerRolloverContainerRegistryCredentialsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRolloverContainerRegistryCredentialsRequest_Hash() { return 636293513U; }

static_assert(std::is_polymorphic<FMultiplayerRequestMultiplayerServerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerRequestMultiplayerServerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerRequestMultiplayerServerResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestMultiplayerServerResponse"), sizeof(FMultiplayerRequestMultiplayerServerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestMultiplayerServerResponse>()
{
	return FMultiplayerRequestMultiplayerServerResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse(FMultiplayerRequestMultiplayerServerResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerRequestMultiplayerServerResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerRequestMultiplayerServerResponse>(FName(TEXT("MultiplayerRequestMultiplayerServerResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ConnectedPlayers_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConnectedPlayers_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_ConnectedPlayers;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FQDN_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FQDN;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LastStateTransitionTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_LastStateTransitionTime;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_State_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_State;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestMultiplayerServerResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identity of the build in which the server was allocated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identity of the build in which the server was allocated." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_Inner = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The connected players in the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The connected players in the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, ConnectedPlayers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The fully qualified domain name of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The fully qualified domain name of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN = { "FQDN", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, FQDN), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The IPv4 address of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The IPv4 address of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time (UTC) at which a change in the multiplayer server state was observed. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time (UTC) at which a change in the multiplayer server state was observed." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime = { "LastStateTransitionTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, LastStateTransitionTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the multiplayer server uses. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the multiplayer server uses." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer server is located in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer server is located in." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The string server ID of the multiplayer server generated by PlayFab. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The string server ID of the multiplayer server generated by PlayFab." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string session ID of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string session ID of the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The state of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The state of the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State = { "State", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, State), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID that the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID that the multiplayer server is located on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerResponse, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ConnectedPlayers,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_FQDN,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_IPV4Address,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_LastStateTransitionTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_ServerId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_SessionId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_State,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::NewProp_VmId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerRequestMultiplayerServerResponse",
		sizeof(FMultiplayerRequestMultiplayerServerResponse),
		alignof(FMultiplayerRequestMultiplayerServerResponse),
		Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerRequestMultiplayerServerResponse"), sizeof(FMultiplayerRequestMultiplayerServerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerResponse_Hash() { return 2480017350U; }

static_assert(std::is_polymorphic<FMultiplayerRequestMultiplayerServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerRequestMultiplayerServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerRequestMultiplayerServerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerRequestMultiplayerServerRequest"), sizeof(FMultiplayerRequestMultiplayerServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerRequestMultiplayerServerRequest>()
{
	return FMultiplayerRequestMultiplayerServerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest(FMultiplayerRequestMultiplayerServerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerRequestMultiplayerServerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerRequestMultiplayerServerRequest>(FName(TEXT("MultiplayerRequestMultiplayerServerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerRequestMultiplayerServerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildAliasParams_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildAliasParams;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InitialPlayers_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_InitialPlayers;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PreferredRegions_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_PreferredRegions;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionCookie_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionCookie;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Requests a multiplayer server session from a particular build in any of the given preferred regions. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Requests a multiplayer server session from a particular build in any of the given preferred regions." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerRequestMultiplayerServerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identifiers of the build alias to use for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identifiers of the build alias to use for the request." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams = { "BuildAliasParams", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, BuildAliasParams), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Initial list of players (potentially matchmade) allowed to connect to the game. This list is passed to the game server\n     * when requested (via GSDK) and can be used to validate players connecting to it.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Initial list of players (potentially matchmade) allowed to connect to the game. This list is passed to the game server\nwhen requested (via GSDK) and can be used to validate players connecting to it." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers = { "InitialPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, InitialPlayers), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The preferred regions to request a multiplayer server from. The Multiplayer Service will iterate through the regions in\n     * the specified order and allocate a server from the first one that has servers available.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The preferred regions to request a multiplayer server from. The Multiplayer Service will iterate through the regions in\nthe specified order and allocate a server from the first one that has servers available." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions = { "PreferredRegions", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, PreferredRegions), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Data encoded as a string that is passed to the game server when requested. This can be used to to communicate\n     * information such as game mode or map through the request flow.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Data encoded as a string that is passed to the game server when requested. This can be used to to communicate\ninformation such as game mode or map through the request flow." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie = { "SessionCookie", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, SessionCookie), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A guid string session ID created track the multiplayer server session over its life. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A guid string session ID created track the multiplayer server session over its life." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerRequestMultiplayerServerRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildAliasParams,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_InitialPlayers,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_PreferredRegions,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionCookie,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::NewProp_SessionId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerRequestMultiplayerServerRequest",
		sizeof(FMultiplayerRequestMultiplayerServerRequest),
		alignof(FMultiplayerRequestMultiplayerServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerRequestMultiplayerServerRequest"), sizeof(FMultiplayerRequestMultiplayerServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerRequestMultiplayerServerRequest_Hash() { return 2148092922U; }

static_assert(std::is_polymorphic<FMultiplayerListVirtualMachineSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListVirtualMachineSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListVirtualMachineSummariesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListVirtualMachineSummariesResponse"), sizeof(FMultiplayerListVirtualMachineSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListVirtualMachineSummariesResponse>()
{
	return FMultiplayerListVirtualMachineSummariesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse(FMultiplayerListVirtualMachineSummariesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListVirtualMachineSummariesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListVirtualMachineSummariesResponse>(FName(TEXT("MultiplayerListVirtualMachineSummariesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_VirtualMachines_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VirtualMachines_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_VirtualMachines;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListVirtualMachineSummariesResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_Inner = { "VirtualMachines", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of virtual machine summaries. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of virtual machine summaries." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines = { "VirtualMachines", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesResponse, VirtualMachines), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_SkipToken,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::NewProp_VirtualMachines,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListVirtualMachineSummariesResponse",
		sizeof(FMultiplayerListVirtualMachineSummariesResponse),
		alignof(FMultiplayerListVirtualMachineSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListVirtualMachineSummariesResponse"), sizeof(FMultiplayerListVirtualMachineSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesResponse_Hash() { return 1533892948U; }

static_assert(std::is_polymorphic<FMultiplayerListVirtualMachineSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListVirtualMachineSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListVirtualMachineSummariesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListVirtualMachineSummariesRequest"), sizeof(FMultiplayerListVirtualMachineSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListVirtualMachineSummariesRequest>()
{
	return FMultiplayerListVirtualMachineSummariesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest(FMultiplayerListVirtualMachineSummariesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListVirtualMachineSummariesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListVirtualMachineSummariesRequest>(FName(TEXT("MultiplayerListVirtualMachineSummariesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListVirtualMachineSummariesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of virtual machines for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of virtual machines for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListVirtualMachineSummariesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the virtual machines to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the virtual machines to list." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the virtual machines to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the virtual machines to list." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListVirtualMachineSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListVirtualMachineSummariesRequest",
		sizeof(FMultiplayerListVirtualMachineSummariesRequest),
		alignof(FMultiplayerListVirtualMachineSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListVirtualMachineSummariesRequest"), sizeof(FMultiplayerListVirtualMachineSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListVirtualMachineSummariesRequest_Hash() { return 716113197U; }

static_assert(std::is_polymorphic<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListTitleMultiplayerServersQuotaChangesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse"), sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>()
{
	return FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>(FName(TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Changes_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Changes_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Changes;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_Inner = { "Changes", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** All change requests for this title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "All change requests for this title." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes = { "Changes", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse, Changes), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::NewProp_Changes,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListTitleMultiplayerServersQuotaChangesResponse",
		sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse),
		alignof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesResponse"), sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesResponse_Hash() { return 2120184057U; }

static_assert(std::is_polymorphic<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListTitleMultiplayerServersQuotaChangesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest"), sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>()
{
	return FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>(FName(TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListTitleMultiplayerServersQuotaChangesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** List all server quota change requests for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "List all server quota change requests for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListTitleMultiplayerServersQuotaChangesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListTitleMultiplayerServersQuotaChangesRequest",
		sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest),
		alignof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListTitleMultiplayerServersQuotaChangesRequest"), sizeof(FMultiplayerListTitleMultiplayerServersQuotaChangesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListTitleMultiplayerServersQuotaChangesRequest_Hash() { return 2399769287U; }

static_assert(std::is_polymorphic<FMultiplayerListQosServersForTitleResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListQosServersForTitleResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListQosServersForTitleResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListQosServersForTitleResponse"), sizeof(FMultiplayerListQosServersForTitleResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListQosServersForTitleResponse>()
{
	return FMultiplayerListQosServersForTitleResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListQosServersForTitleResponse(FMultiplayerListQosServersForTitleResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListQosServersForTitleResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListQosServersForTitleResponse>(FName(TEXT("MultiplayerListQosServersForTitleResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_QosServers_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QosServers_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_QosServers;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListQosServersForTitleResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_Inner = { "QosServers", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of QoS servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of QoS servers." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers = { "QosServers", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, QosServers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListQosServersForTitleResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_QosServers,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListQosServersForTitleResponse",
		sizeof(FMultiplayerListQosServersForTitleResponse),
		alignof(FMultiplayerListQosServersForTitleResponse),
		Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListQosServersForTitleResponse"), sizeof(FMultiplayerListQosServersForTitleResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleResponse_Hash() { return 575965086U; }

static_assert(std::is_polymorphic<FMultiplayerListQosServersForTitleRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListQosServersForTitleRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListQosServersForTitleRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListQosServersForTitleRequest"), sizeof(FMultiplayerListQosServersForTitleRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListQosServersForTitleRequest>()
{
	return FMultiplayerListQosServersForTitleRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListQosServersForTitleRequest(FMultiplayerListQosServersForTitleRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListQosServersForTitleRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListQosServersForTitleRequest>(FName(TEXT("MultiplayerListQosServersForTitleRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListQosServersForTitleRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IncludeAllRegions_MetaData[];
#endif
		static void NewProp_IncludeAllRegions_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_IncludeAllRegions;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of quality of service servers for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of quality of service servers for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListQosServersForTitleRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListQosServersForTitleRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates that the response should contain Qos servers for all regions, including those where there are no builds\n     * deployed for the title.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates that the response should contain Qos servers for all regions, including those where there are no builds\ndeployed for the title." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_SetBit(void* Obj)
	{
		((FMultiplayerListQosServersForTitleRequest*)Obj)->IncludeAllRegions = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions = { "IncludeAllRegions", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerListQosServersForTitleRequest), &Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::NewProp_IncludeAllRegions,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListQosServersForTitleRequest",
		sizeof(FMultiplayerListQosServersForTitleRequest),
		alignof(FMultiplayerListQosServersForTitleRequest),
		Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListQosServersForTitleRequest"), sizeof(FMultiplayerListQosServersForTitleRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListQosServersForTitleRequest_Hash() { return 2762734412U; }

static_assert(std::is_polymorphic<FMultiplayerListPartyQosServersResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListPartyQosServersResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListPartyQosServersResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListPartyQosServersResponse"), sizeof(FMultiplayerListPartyQosServersResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListPartyQosServersResponse>()
{
	return FMultiplayerListPartyQosServersResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListPartyQosServersResponse(FMultiplayerListPartyQosServersResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListPartyQosServersResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListPartyQosServersResponse>(FName(TEXT("MultiplayerListPartyQosServersResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_QosServers_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QosServers_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_QosServers;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListPartyQosServersResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_Inner = { "QosServers", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of QoS servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of QoS servers." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers = { "QosServers", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, QosServers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListPartyQosServersResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_QosServers,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListPartyQosServersResponse",
		sizeof(FMultiplayerListPartyQosServersResponse),
		alignof(FMultiplayerListPartyQosServersResponse),
		Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListPartyQosServersResponse"), sizeof(FMultiplayerListPartyQosServersResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersResponse_Hash() { return 548724426U; }

static_assert(std::is_polymorphic<FMultiplayerListPartyQosServersRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListPartyQosServersRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListPartyQosServersRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListPartyQosServersRequest"), sizeof(FMultiplayerListPartyQosServersRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListPartyQosServersRequest>()
{
	return FMultiplayerListPartyQosServersRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListPartyQosServersRequest(FMultiplayerListPartyQosServersRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListPartyQosServersRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListPartyQosServersRequest>(FName(TEXT("MultiplayerListPartyQosServersRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListPartyQosServersRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of quality of service servers for party. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of quality of service servers for party." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListPartyQosServersRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListPartyQosServersRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListPartyQosServersRequest",
		sizeof(FMultiplayerListPartyQosServersRequest),
		alignof(FMultiplayerListPartyQosServersRequest),
		Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListPartyQosServersRequest"), sizeof(FMultiplayerListPartyQosServersRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListPartyQosServersRequest_Hash() { return 3919826784U; }

static_assert(std::is_polymorphic<FMultiplayerListContainerImageTagsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListContainerImageTagsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListContainerImageTagsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImageTagsResponse"), sizeof(FMultiplayerListContainerImageTagsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImageTagsResponse>()
{
	return FMultiplayerListContainerImageTagsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListContainerImageTagsResponse(FMultiplayerListContainerImageTagsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListContainerImageTagsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListContainerImageTagsResponse>(FName(TEXT("MultiplayerListContainerImageTagsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Tags_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Tags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImageTagsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of tags for a particular container image. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of tags for a particular container image." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags = { "Tags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImageTagsResponse, Tags), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::NewProp_Tags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListContainerImageTagsResponse",
		sizeof(FMultiplayerListContainerImageTagsResponse),
		alignof(FMultiplayerListContainerImageTagsResponse),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListContainerImageTagsResponse"), sizeof(FMultiplayerListContainerImageTagsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsResponse_Hash() { return 724182623U; }

static_assert(std::is_polymorphic<FMultiplayerListContainerImageTagsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListContainerImageTagsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListContainerImageTagsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImageTagsRequest"), sizeof(FMultiplayerListContainerImageTagsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImageTagsRequest>()
{
	return FMultiplayerListContainerImageTagsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListContainerImageTagsRequest(FMultiplayerListContainerImageTagsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListContainerImageTagsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListContainerImageTagsRequest>(FName(TEXT("MultiplayerListContainerImageTagsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImageTagsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ImageName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of the tags for a particular container image that exists in the container registry for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of the tags for a particular container image that exists in the container registry for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImageTagsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container images we want to list tags for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container images we want to list tags for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImageTagsRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::NewProp_ImageName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListContainerImageTagsRequest",
		sizeof(FMultiplayerListContainerImageTagsRequest),
		alignof(FMultiplayerListContainerImageTagsRequest),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListContainerImageTagsRequest"), sizeof(FMultiplayerListContainerImageTagsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImageTagsRequest_Hash() { return 2082087179U; }

static_assert(std::is_polymorphic<FMultiplayerListContainerImagesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListContainerImagesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListContainerImagesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImagesResponse"), sizeof(FMultiplayerListContainerImagesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImagesResponse>()
{
	return FMultiplayerListContainerImagesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListContainerImagesResponse(FMultiplayerListContainerImagesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListContainerImagesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListContainerImagesResponse>(FName(TEXT("MultiplayerListContainerImagesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Images_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Images;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImagesResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of container images. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of container images." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images = { "Images", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, Images), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_Images,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListContainerImagesResponse",
		sizeof(FMultiplayerListContainerImagesResponse),
		alignof(FMultiplayerListContainerImagesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListContainerImagesResponse"), sizeof(FMultiplayerListContainerImagesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesResponse_Hash() { return 292378669U; }

static_assert(std::is_polymorphic<FMultiplayerListContainerImagesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListContainerImagesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListContainerImagesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListContainerImagesRequest"), sizeof(FMultiplayerListContainerImagesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListContainerImagesRequest>()
{
	return FMultiplayerListContainerImagesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListContainerImagesRequest(FMultiplayerListContainerImagesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListContainerImagesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListContainerImagesRequest>(FName(TEXT("MultiplayerListContainerImagesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListContainerImagesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of the container images that have been uploaded to the container registry for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of the container images that have been uploaded to the container registry for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListContainerImagesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListContainerImagesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListContainerImagesRequest",
		sizeof(FMultiplayerListContainerImagesRequest),
		alignof(FMultiplayerListContainerImagesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListContainerImagesRequest"), sizeof(FMultiplayerListContainerImagesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListContainerImagesRequest_Hash() { return 3114830779U; }

static_assert(std::is_polymorphic<FMultiplayerListCertificateSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListCertificateSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListCertificateSummariesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListCertificateSummariesResponse"), sizeof(FMultiplayerListCertificateSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListCertificateSummariesResponse>()
{
	return FMultiplayerListCertificateSummariesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListCertificateSummariesResponse(FMultiplayerListCertificateSummariesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListCertificateSummariesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListCertificateSummariesResponse>(FName(TEXT("MultiplayerListCertificateSummariesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CertificateSummaries_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CertificateSummaries_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_CertificateSummaries;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListCertificateSummariesResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_Inner = { "CertificateSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game certificates. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game certificates." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries = { "CertificateSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, CertificateSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_CertificateSummaries,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListCertificateSummariesResponse",
		sizeof(FMultiplayerListCertificateSummariesResponse),
		alignof(FMultiplayerListCertificateSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListCertificateSummariesResponse"), sizeof(FMultiplayerListCertificateSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesResponse_Hash() { return 1422548901U; }

static_assert(std::is_polymorphic<FMultiplayerListCertificateSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListCertificateSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListCertificateSummariesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListCertificateSummariesRequest"), sizeof(FMultiplayerListCertificateSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListCertificateSummariesRequest>()
{
	return FMultiplayerListCertificateSummariesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListCertificateSummariesRequest(FMultiplayerListCertificateSummariesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListCertificateSummariesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListCertificateSummariesRequest>(FName(TEXT("MultiplayerListCertificateSummariesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListCertificateSummariesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer server game certificates for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer server game certificates for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListCertificateSummariesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListCertificateSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListCertificateSummariesRequest",
		sizeof(FMultiplayerListCertificateSummariesRequest),
		alignof(FMultiplayerListCertificateSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListCertificateSummariesRequest"), sizeof(FMultiplayerListCertificateSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListCertificateSummariesRequest_Hash() { return 67723209U; }

static_assert(std::is_polymorphic<FMultiplayerListBuildSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListBuildSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListBuildSummariesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildSummariesResponse"), sizeof(FMultiplayerListBuildSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildSummariesResponse>()
{
	return FMultiplayerListBuildSummariesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListBuildSummariesResponse(FMultiplayerListBuildSummariesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListBuildSummariesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListBuildSummariesResponse>(FName(TEXT("MultiplayerListBuildSummariesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildSummaries_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildSummaries_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildSummaries;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildSummariesResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_Inner = { "BuildSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of build summaries for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of build summaries for a title." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries = { "BuildSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, BuildSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_BuildSummaries,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListBuildSummariesResponse",
		sizeof(FMultiplayerListBuildSummariesResponse),
		alignof(FMultiplayerListBuildSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListBuildSummariesResponse"), sizeof(FMultiplayerListBuildSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesResponse_Hash() { return 1986863696U; }

static_assert(std::is_polymorphic<FMultiplayerListBuildSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListBuildSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListBuildSummariesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildSummariesRequest"), sizeof(FMultiplayerListBuildSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildSummariesRequest>()
{
	return FMultiplayerListBuildSummariesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListBuildSummariesRequest(FMultiplayerListBuildSummariesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListBuildSummariesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListBuildSummariesRequest>(FName(TEXT("MultiplayerListBuildSummariesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildSummariesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of summarized details of all multiplayer server builds for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of summarized details of all multiplayer server builds for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildSummariesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListBuildSummariesRequest",
		sizeof(FMultiplayerListBuildSummariesRequest),
		alignof(FMultiplayerListBuildSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListBuildSummariesRequest"), sizeof(FMultiplayerListBuildSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildSummariesRequest_Hash() { return 3697267899U; }

static_assert(std::is_polymorphic<FMultiplayerListBuildAliasesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListBuildAliasesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListBuildAliasesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildAliasesResponse"), sizeof(FMultiplayerListBuildAliasesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildAliasesResponse>()
{
	return FMultiplayerListBuildAliasesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListBuildAliasesResponse(FMultiplayerListBuildAliasesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListBuildAliasesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListBuildAliasesResponse>(FName(TEXT("MultiplayerListBuildAliasesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildAliases_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildAliases_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildAliases;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildAliasesResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_Inner = { "BuildAliases", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of build aliases for the title */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of build aliases for the title" },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases = { "BuildAliases", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, BuildAliases), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_BuildAliases,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListBuildAliasesResponse",
		sizeof(FMultiplayerListBuildAliasesResponse),
		alignof(FMultiplayerListBuildAliasesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListBuildAliasesResponse"), sizeof(FMultiplayerListBuildAliasesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesResponse_Hash() { return 3668648037U; }

static_assert(std::is_polymorphic<FMultiplayerListBuildAliasesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListBuildAliasesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListBuildAliasesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListBuildAliasesRequest"), sizeof(FMultiplayerListBuildAliasesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListBuildAliasesRequest>()
{
	return FMultiplayerListBuildAliasesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListBuildAliasesRequest(FMultiplayerListBuildAliasesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListBuildAliasesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListBuildAliasesRequest>(FName(TEXT("MultiplayerListBuildAliasesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListBuildAliasesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of summarized details of all multiplayer server builds for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of summarized details of all multiplayer server builds for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListBuildAliasesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListBuildAliasesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListBuildAliasesRequest",
		sizeof(FMultiplayerListBuildAliasesRequest),
		alignof(FMultiplayerListBuildAliasesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListBuildAliasesRequest"), sizeof(FMultiplayerListBuildAliasesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListBuildAliasesRequest_Hash() { return 3535485008U; }

static_assert(std::is_polymorphic<FMultiplayerListAssetSummariesResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListAssetSummariesResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListAssetSummariesResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListAssetSummariesResponse"), sizeof(FMultiplayerListAssetSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListAssetSummariesResponse>()
{
	return FMultiplayerListAssetSummariesResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListAssetSummariesResponse(FMultiplayerListAssetSummariesResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListAssetSummariesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListAssetSummariesResponse>(FName(TEXT("MultiplayerListAssetSummariesResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_AssetSummaries_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AssetSummaries_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_AssetSummaries;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListAssetSummariesResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_Inner = { "AssetSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of asset summaries. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of asset summaries." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries = { "AssetSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, AssetSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_AssetSummaries,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListAssetSummariesResponse",
		sizeof(FMultiplayerListAssetSummariesResponse),
		alignof(FMultiplayerListAssetSummariesResponse),
		Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListAssetSummariesResponse"), sizeof(FMultiplayerListAssetSummariesResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesResponse_Hash() { return 3101159588U; }

static_assert(std::is_polymorphic<FMultiplayerListAssetSummariesRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListAssetSummariesRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListAssetSummariesRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListAssetSummariesRequest"), sizeof(FMultiplayerListAssetSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListAssetSummariesRequest>()
{
	return FMultiplayerListAssetSummariesRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListAssetSummariesRequest(FMultiplayerListAssetSummariesRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListAssetSummariesRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListAssetSummariesRequest>(FName(TEXT("MultiplayerListAssetSummariesRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListAssetSummariesRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer server game asset summaries for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer server game asset summaries for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListAssetSummariesRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListAssetSummariesRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListAssetSummariesRequest",
		sizeof(FMultiplayerListAssetSummariesRequest),
		alignof(FMultiplayerListAssetSummariesRequest),
		Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListAssetSummariesRequest"), sizeof(FMultiplayerListAssetSummariesRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListAssetSummariesRequest_Hash() { return 1531126201U; }

static_assert(std::is_polymorphic<FMultiplayerListMultiplayerServersResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListMultiplayerServersResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListMultiplayerServersResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMultiplayerServersResponse"), sizeof(FMultiplayerListMultiplayerServersResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMultiplayerServersResponse>()
{
	return FMultiplayerListMultiplayerServersResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListMultiplayerServersResponse(FMultiplayerListMultiplayerServersResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListMultiplayerServersResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListMultiplayerServersResponse>(FName(TEXT("MultiplayerListMultiplayerServersResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_MultiplayerServerSummaries_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerSummaries_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_MultiplayerServerSummaries;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMultiplayerServersResponse>();
	}
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_Inner = { "MultiplayerServerSummaries", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of multiplayer server summary details. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of multiplayer server summary details." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries = { "MultiplayerServerSummaries", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, MultiplayerServerSummaries), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size on the response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size on the response." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged response. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged response." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersResponse, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_MultiplayerServerSummaries,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListMultiplayerServersResponse",
		sizeof(FMultiplayerListMultiplayerServersResponse),
		alignof(FMultiplayerListMultiplayerServersResponse),
		Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListMultiplayerServersResponse"), sizeof(FMultiplayerListMultiplayerServersResponse), Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersResponse_Hash() { return 562569641U; }

static_assert(std::is_polymorphic<FMultiplayerListMultiplayerServersRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListMultiplayerServersRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListMultiplayerServersRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMultiplayerServersRequest"), sizeof(FMultiplayerListMultiplayerServersRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMultiplayerServersRequest>()
{
	return FMultiplayerListMultiplayerServersRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListMultiplayerServersRequest(FMultiplayerListMultiplayerServersRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListMultiplayerServersRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListMultiplayerServersRequest>(FName(TEXT("MultiplayerListMultiplayerServersRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMultiplayerServersRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_PageSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_PageSize;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SkipToken_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SkipToken;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns a list of multiplayer servers for a build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns a list of multiplayer servers for a build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMultiplayerServersRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer servers to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer servers to list." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The page size for the request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The page size for the request." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize = { "PageSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, PageSize), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer servers to list. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer servers to list." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The skip token for the paged request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The skip token for the paged request." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken = { "SkipToken", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMultiplayerServersRequest, SkipToken), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_PageSize,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::NewProp_SkipToken,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListMultiplayerServersRequest",
		sizeof(FMultiplayerListMultiplayerServersRequest),
		alignof(FMultiplayerListMultiplayerServersRequest),
		Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListMultiplayerServersRequest"), sizeof(FMultiplayerListMultiplayerServersRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMultiplayerServersRequest_Hash() { return 3595454137U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotasResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotasResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotasResponse>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse(FMultiplayerGetTitleMultiplayerServersQuotasResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasResponse>(FName(TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Quotas_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Quotas;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The various quotas for multiplayer servers for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The various quotas for multiplayer servers for the title." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas = { "Quotas", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotasResponse, Quotas), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::NewProp_Quotas,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotasResponse",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotasResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleMultiplayerServersQuotasResponse"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotasResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasResponse_Hash() { return 839022448U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotasRequest>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest(FMultiplayerGetTitleMultiplayerServersQuotasRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasRequest>(FName(TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotasRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets the quotas for a title in relation to multiplayer servers. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the quotas for a title in relation to multiplayer servers." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotasRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotasRequest",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotasRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleMultiplayerServersQuotasRequest"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotasRequest_Hash() { return 59532930U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>(FName(TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Change_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Change;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The change request for this title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The change request for this title." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change = { "Change", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse, Change), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_Change,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotaChangeResponse",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeResponse"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse_Hash() { return 2914079816U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>()
{
	return FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>(FName(TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleMultiplayerServersQuotaChangeRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RequestId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_RequestId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a title's server quota change request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a title's server quota change request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Id of the change request to get. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Id of the change request to get." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId = { "RequestId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest, RequestId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_RequestId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleMultiplayerServersQuotaChangeRequest",
		sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest),
		alignof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleMultiplayerServersQuotaChangeRequest"), sizeof(FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest_Hash() { return 265496234U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse"), sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>()
{
	return FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>(FName(TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_Status_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_Status;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse>();
	}
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The enabled status for the multiplayer server features for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The enabled status for the multiplayer server features for the title." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse, Status), Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::NewProp_Status,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse",
		sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse),
		alignof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse"), sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse_Hash() { return 402197238U; }

static_assert(std::is_polymorphic<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest"), sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>()
{
	return FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>(FName(TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be\n * Initializing, Enabled, and Disabled.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the status of whether a title is enabled for the multiplayer server feature. The enabled status can be\nInitializing, Enabled, and Disabled." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest",
		sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest),
		alignof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest"), sizeof(FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest_Hash() { return 715658079U; }

static_assert(std::is_polymorphic<FMultiplayerGetRemoteLoginEndpointResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetRemoteLoginEndpointResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetRemoteLoginEndpointResponse"), sizeof(FMultiplayerGetRemoteLoginEndpointResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetRemoteLoginEndpointResponse>()
{
	return FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse(FMultiplayerGetRemoteLoginEndpointResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetRemoteLoginEndpointResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetRemoteLoginEndpointResponse>(FName(TEXT("MultiplayerGetRemoteLoginEndpointResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Port_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_Port;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetRemoteLoginEndpointResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The remote login IPV4 address of multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The remote login IPV4 address of multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The remote login port of multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The remote login port of multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port = { "Port", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointResponse, Port), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_IPV4Address,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::NewProp_Port,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetRemoteLoginEndpointResponse",
		sizeof(FMultiplayerGetRemoteLoginEndpointResponse),
		alignof(FMultiplayerGetRemoteLoginEndpointResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetRemoteLoginEndpointResponse"), sizeof(FMultiplayerGetRemoteLoginEndpointResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointResponse_Hash() { return 1948710871U; }

static_assert(std::is_polymorphic<FMultiplayerGetRemoteLoginEndpointRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetRemoteLoginEndpointRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetRemoteLoginEndpointRequest"), sizeof(FMultiplayerGetRemoteLoginEndpointRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetRemoteLoginEndpointRequest>()
{
	return FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest(FMultiplayerGetRemoteLoginEndpointRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetRemoteLoginEndpointRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetRemoteLoginEndpointRequest>(FName(TEXT("MultiplayerGetRemoteLoginEndpointRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetRemoteLoginEndpointRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a remote login endpoint to a VM that is hosting a multiplayer server build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetRemoteLoginEndpointRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to get remote login information for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to get remote login information for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the multiplayer server to get remote login information for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the multiplayer server to get remote login information for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetRemoteLoginEndpointRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::NewProp_VmId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetRemoteLoginEndpointRequest",
		sizeof(FMultiplayerGetRemoteLoginEndpointRequest),
		alignof(FMultiplayerGetRemoteLoginEndpointRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetRemoteLoginEndpointRequest"), sizeof(FMultiplayerGetRemoteLoginEndpointRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetRemoteLoginEndpointRequest_Hash() { return 2895083623U; }

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest"), sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>()
{
	return FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerSessionLogsBySessionIdRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerSessionLogsBySessionIdRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>(FName(TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerSessionLogsBySessionIdRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\n * terminated.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\nterminated." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The server ID of multiplayer server to get logs for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server ID of multiplayer server to get logs for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::NewProp_SessionId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerSessionLogsBySessionIdRequest",
		sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest),
		alignof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMultiplayerSessionLogsBySessionIdRequest"), sizeof(FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest_Hash() { return 1641029944U; }

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerLogsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerLogsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerLogsResponse"), sizeof(FMultiplayerGetMultiplayerServerLogsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerLogsResponse>()
{
	return FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse(FMultiplayerGetMultiplayerServerLogsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMultiplayerServerLogsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMultiplayerServerLogsResponse>(FName(TEXT("MultiplayerGetMultiplayerServerLogsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LogDownloadUrl_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_LogDownloadUrl;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerLogsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** URL for logs download. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "URL for logs download." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl = { "LogDownloadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsResponse, LogDownloadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::NewProp_LogDownloadUrl,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerLogsResponse",
		sizeof(FMultiplayerGetMultiplayerServerLogsResponse),
		alignof(FMultiplayerGetMultiplayerServerLogsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMultiplayerServerLogsResponse"), sizeof(FMultiplayerGetMultiplayerServerLogsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsResponse_Hash() { return 2894079376U; }

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerLogsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerLogsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerLogsRequest"), sizeof(FMultiplayerGetMultiplayerServerLogsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerLogsRequest>()
{
	return FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest(FMultiplayerGetMultiplayerServerLogsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMultiplayerServerLogsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMultiplayerServerLogsRequest>(FName(TEXT("MultiplayerGetMultiplayerServerLogsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerLogsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\n * terminated.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server logs for a specific server id in a region. The logs are available only after a server has\nterminated." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerLogsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The server ID of multiplayer server to get logs for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server ID of multiplayer server to get logs for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerLogsRequest, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::NewProp_ServerId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerLogsRequest",
		sizeof(FMultiplayerGetMultiplayerServerLogsRequest),
		alignof(FMultiplayerGetMultiplayerServerLogsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMultiplayerServerLogsRequest"), sizeof(FMultiplayerGetMultiplayerServerLogsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerLogsRequest_Hash() { return 2898303668U; }

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerDetailsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerDetailsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerDetailsResponse"), sizeof(FMultiplayerGetMultiplayerServerDetailsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerDetailsResponse>()
{
	return FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse(FMultiplayerGetMultiplayerServerDetailsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMultiplayerServerDetailsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMultiplayerServerDetailsResponse>(FName(TEXT("MultiplayerGetMultiplayerServerDetailsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ConnectedPlayers_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConnectedPlayers_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_ConnectedPlayers;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FQDN_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FQDN;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IPV4Address_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_IPV4Address;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LastStateTransitionTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_LastStateTransitionTime;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_State_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_State;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerDetailsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The identity of the build in which the server was allocated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The identity of the build in which the server was allocated." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_Inner = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The connected players in the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The connected players in the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers = { "ConnectedPlayers", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, ConnectedPlayers), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The fully qualified domain name of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The fully qualified domain name of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN = { "FQDN", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, FQDN), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The IPv4 address of the virtual machine that is hosting this multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The IPv4 address of the virtual machine that is hosting this multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address = { "IPV4Address", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, IPV4Address), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time (UTC) at which a change in the multiplayer server state was observed. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time (UTC) at which a change in the multiplayer server state was observed." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime = { "LastStateTransitionTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, LastStateTransitionTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the multiplayer server uses. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the multiplayer server uses." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer server is located in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer server is located in." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The string server ID of the multiplayer server generated by PlayFab. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The string server ID of the multiplayer server generated by PlayFab." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId = { "ServerId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, ServerId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string session ID of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string session ID of the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The state of the multiplayer server. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The state of the multiplayer server." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State = { "State", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, State), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID that the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID that the multiplayer server is located on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsResponse, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ConnectedPlayers,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_FQDN,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_IPV4Address,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_LastStateTransitionTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_ServerId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_SessionId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_State,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::NewProp_VmId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerDetailsResponse",
		sizeof(FMultiplayerGetMultiplayerServerDetailsResponse),
		alignof(FMultiplayerGetMultiplayerServerDetailsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMultiplayerServerDetailsResponse"), sizeof(FMultiplayerGetMultiplayerServerDetailsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsResponse_Hash() { return 908522300U; }

static_assert(std::is_polymorphic<FMultiplayerGetMultiplayerServerDetailsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMultiplayerServerDetailsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMultiplayerServerDetailsRequest"), sizeof(FMultiplayerGetMultiplayerServerDetailsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMultiplayerServerDetailsRequest>()
{
	return FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest(FMultiplayerGetMultiplayerServerDetailsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMultiplayerServerDetailsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMultiplayerServerDetailsRequest>(FName(TEXT("MultiplayerGetMultiplayerServerDetailsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMultiplayerServerDetailsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SessionId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_SessionId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets multiplayer server session details for a build in a specific region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets multiplayer server session details for a build in a specific region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMultiplayerServerDetailsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server to get details for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server to get details for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region the multiplayer server is located in to get details for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region the multiplayer server is located in to get details for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The title generated guid string session ID of the multiplayer server to get details for. This is to keep track of\n     * multiplayer server sessions.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The title generated guid string session ID of the multiplayer server to get details for. This is to keep track of\nmultiplayer server sessions." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId = { "SessionId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMultiplayerServerDetailsRequest, SessionId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::NewProp_SessionId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMultiplayerServerDetailsRequest",
		sizeof(FMultiplayerGetMultiplayerServerDetailsRequest),
		alignof(FMultiplayerGetMultiplayerServerDetailsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMultiplayerServerDetailsRequest"), sizeof(FMultiplayerGetMultiplayerServerDetailsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMultiplayerServerDetailsRequest_Hash() { return 227793587U; }

static_assert(std::is_polymorphic<FMultiplayerGetContainerRegistryCredentialsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetContainerRegistryCredentialsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetContainerRegistryCredentialsResponse"), sizeof(FMultiplayerGetContainerRegistryCredentialsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetContainerRegistryCredentialsResponse>()
{
	return FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse(FMultiplayerGetContainerRegistryCredentialsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetContainerRegistryCredentialsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetContainerRegistryCredentialsResponse>(FName(TEXT("MultiplayerGetContainerRegistryCredentialsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_DnsName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_DnsName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetContainerRegistryCredentialsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The url of the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The url of the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName = { "DnsName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, DnsName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The password for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The password for accessing the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for accessing the container registry. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for accessing the container registry." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_DnsName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Password,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::NewProp_Username,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetContainerRegistryCredentialsResponse",
		sizeof(FMultiplayerGetContainerRegistryCredentialsResponse),
		alignof(FMultiplayerGetContainerRegistryCredentialsResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetContainerRegistryCredentialsResponse"), sizeof(FMultiplayerGetContainerRegistryCredentialsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsResponse_Hash() { return 3349380883U; }

static_assert(std::is_polymorphic<FMultiplayerGetContainerRegistryCredentialsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetContainerRegistryCredentialsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetContainerRegistryCredentialsRequest"), sizeof(FMultiplayerGetContainerRegistryCredentialsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetContainerRegistryCredentialsRequest>()
{
	return FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest(FMultiplayerGetContainerRegistryCredentialsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetContainerRegistryCredentialsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetContainerRegistryCredentialsRequest>(FName(TEXT("MultiplayerGetContainerRegistryCredentialsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetContainerRegistryCredentialsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Gets credentials to the container registry where game developers can upload custom container images to before creating a\n * new build.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets credentials to the container registry where game developers can upload custom container images to before creating a\nnew build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetContainerRegistryCredentialsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetContainerRegistryCredentialsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetContainerRegistryCredentialsRequest",
		sizeof(FMultiplayerGetContainerRegistryCredentialsRequest),
		alignof(FMultiplayerGetContainerRegistryCredentialsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetContainerRegistryCredentialsRequest"), sizeof(FMultiplayerGetContainerRegistryCredentialsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetContainerRegistryCredentialsRequest_Hash() { return 1412888158U; }

static_assert(std::is_polymorphic<FMultiplayerGetBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetBuildAliasRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildAliasRequest"), sizeof(FMultiplayerGetBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildAliasRequest>()
{
	return FMultiplayerGetBuildAliasRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetBuildAliasRequest(FMultiplayerGetBuildAliasRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetBuildAliasRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildAliasRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildAliasRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetBuildAliasRequest>(FName(TEXT("MultiplayerGetBuildAliasRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildAliasRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns the details about a multiplayer server build alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the details about a multiplayer server build alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildAliasRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias ID of the alias to perform the action on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias ID of the alias to perform the action on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_AliasId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetBuildAliasRequest",
		sizeof(FMultiplayerGetBuildAliasRequest),
		alignof(FMultiplayerGetBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetBuildAliasRequest"), sizeof(FMultiplayerGetBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildAliasRequest_Hash() { return 655809494U; }

static_assert(std::is_polymorphic<FMultiplayerGetBuildResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetBuildResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetBuildResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildResponse"), sizeof(FMultiplayerGetBuildResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildResponse>()
{
	return FMultiplayerGetBuildResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetBuildResponse(FMultiplayerGetBuildResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetBuildResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetBuildResponse>(FName(TEXT("MultiplayerGetBuildResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildStatus_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildStatus;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CreationTime;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomGameContainerImage_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomGameContainerImage;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerGetBuildResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetBuildResponse), &Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The current build status. Valid values are - Deploying, Deployed, DeletingRegion, Unhealthy. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current build status. Valid values are - Deploying, Deployed, DeletingRegion, Unhealthy." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus = { "BuildStatus", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, BuildStatus), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of he build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of he build." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The container command to run when the multiplayer server has been allocated, including any arguments. This only applies\n     * to custom builds. If the build is a managed build, this field will be null.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments. This only applies\nto custom builds. If the build is a managed build, this field will be null." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The custom game container image for a custom build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The custom game container image for a custom build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage = { "CustomGameContainerImage", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, CustomGameContainerImage), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration of the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata of the build. The keys are case insensitive. The build metadata is made available to the server through Game\n     * Server SDK (GSDK).\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata of the build. The keys are case insensitive. The build metadata is made available to the server through Game\nServer SDK (GSDK)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to hosted on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to hosted on a single VM of the build." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server has been allocated, including any arguments. This only applies to managed\n     * builds. If the build is a custom build, this field will be null.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server has been allocated, including any arguments. This only applies to managed\nbuilds. If the build is a custom build, this field will be null." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerGetBuildResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetBuildResponse), &Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_BuildStatus,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ContainerRunCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CreationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_CustomGameContainerImage,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_OsPlatform,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_ServerType,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetBuildResponse",
		sizeof(FMultiplayerGetBuildResponse),
		alignof(FMultiplayerGetBuildResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetBuildResponse"), sizeof(FMultiplayerGetBuildResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildResponse_Hash() { return 2727134261U; }

static_assert(std::is_polymorphic<FMultiplayerGetBuildRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetBuildRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetBuildRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetBuildRequest"), sizeof(FMultiplayerGetBuildRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetBuildRequest>()
{
	return FMultiplayerGetBuildRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetBuildRequest(FMultiplayerGetBuildRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetBuildRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetBuildRequest>(FName(TEXT("MultiplayerGetBuildRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetBuildRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Returns the details about a multiplayer server build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the details about a multiplayer server build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetBuildRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build to get. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build to get." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetBuildRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetBuildRequest",
		sizeof(FMultiplayerGetBuildRequest),
		alignof(FMultiplayerGetBuildRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetBuildRequest"), sizeof(FMultiplayerGetBuildRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetBuildRequest_Hash() { return 2499763492U; }

static_assert(std::is_polymorphic<FMultiplayerGetAssetUploadUrlResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetAssetUploadUrlResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetAssetUploadUrlResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetUploadUrlResponse"), sizeof(FMultiplayerGetAssetUploadUrlResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetUploadUrlResponse>()
{
	return FMultiplayerGetAssetUploadUrlResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse(FMultiplayerGetAssetUploadUrlResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetAssetUploadUrlResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetAssetUploadUrlResponse>(FName(TEXT("MultiplayerGetAssetUploadUrlResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AssetUploadUrl_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AssetUploadUrl;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetUploadUrlResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's upload URL. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's upload URL." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl = { "AssetUploadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlResponse, AssetUploadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the upload URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the upload URL for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlResponse, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_AssetUploadUrl,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::NewProp_FileName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetAssetUploadUrlResponse",
		sizeof(FMultiplayerGetAssetUploadUrlResponse),
		alignof(FMultiplayerGetAssetUploadUrlResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetAssetUploadUrlResponse"), sizeof(FMultiplayerGetAssetUploadUrlResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlResponse_Hash() { return 815072940U; }

static_assert(std::is_polymorphic<FMultiplayerGetAssetUploadUrlRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetAssetUploadUrlRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetAssetUploadUrlRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetUploadUrlRequest"), sizeof(FMultiplayerGetAssetUploadUrlRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetUploadUrlRequest>()
{
	return FMultiplayerGetAssetUploadUrlRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest(FMultiplayerGetAssetUploadUrlRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetAssetUploadUrlRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetAssetUploadUrlRequest>(FName(TEXT("MultiplayerGetAssetUploadUrlRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetUploadUrlRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets the URL to upload assets to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets the URL to upload assets to." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetUploadUrlRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the upload URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the upload URL for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetUploadUrlRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::NewProp_FileName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetAssetUploadUrlRequest",
		sizeof(FMultiplayerGetAssetUploadUrlRequest),
		alignof(FMultiplayerGetAssetUploadUrlRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetAssetUploadUrlRequest"), sizeof(FMultiplayerGetAssetUploadUrlRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetUploadUrlRequest_Hash() { return 4037496127U; }

static_assert(std::is_polymorphic<FMultiplayerGetAssetDownloadUrlResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetAssetDownloadUrlResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetAssetDownloadUrlResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetDownloadUrlResponse"), sizeof(FMultiplayerGetAssetDownloadUrlResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetDownloadUrlResponse>()
{
	return FMultiplayerGetAssetDownloadUrlResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse(FMultiplayerGetAssetDownloadUrlResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetAssetDownloadUrlResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetAssetDownloadUrlResponse>(FName(TEXT("MultiplayerGetAssetDownloadUrlResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AssetDownloadUrl_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AssetDownloadUrl;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetDownloadUrlResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's download URL. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's download URL." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl = { "AssetDownloadUrl", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlResponse, AssetDownloadUrl), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the download URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the download URL for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlResponse, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_AssetDownloadUrl,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::NewProp_FileName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetAssetDownloadUrlResponse",
		sizeof(FMultiplayerGetAssetDownloadUrlResponse),
		alignof(FMultiplayerGetAssetDownloadUrlResponse),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetAssetDownloadUrlResponse"), sizeof(FMultiplayerGetAssetDownloadUrlResponse), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlResponse_Hash() { return 1912203839U; }

static_assert(std::is_polymorphic<FMultiplayerGetAssetDownloadUrlRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetAssetDownloadUrlRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetAssetDownloadUrlRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetAssetDownloadUrlRequest"), sizeof(FMultiplayerGetAssetDownloadUrlRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetAssetDownloadUrlRequest>()
{
	return FMultiplayerGetAssetDownloadUrlRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest(FMultiplayerGetAssetDownloadUrlRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetAssetDownloadUrlRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetAssetDownloadUrlRequest>(FName(TEXT("MultiplayerGetAssetDownloadUrlRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetAssetDownloadUrlRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Gets a URL that can be used to download the specified asset. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Gets a URL that can be used to download the specified asset." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetAssetDownloadUrlRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The asset's file name to get the download URL for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The asset's file name to get the download URL for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetAssetDownloadUrlRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::NewProp_FileName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetAssetDownloadUrlRequest",
		sizeof(FMultiplayerGetAssetDownloadUrlRequest),
		alignof(FMultiplayerGetAssetDownloadUrlRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetAssetDownloadUrlRequest"), sizeof(FMultiplayerGetAssetDownloadUrlRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetAssetDownloadUrlRequest_Hash() { return 1683056928U; }

static_assert(std::is_polymorphic<FMultiplayerEnableMultiplayerServersForTitleResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerEnableMultiplayerServersForTitleResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEnableMultiplayerServersForTitleResponse"), sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse), Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEnableMultiplayerServersForTitleResponse>()
{
	return FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse(FMultiplayerEnableMultiplayerServersForTitleResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerEnableMultiplayerServersForTitleResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerEnableMultiplayerServersForTitleResponse>(FName(TEXT("MultiplayerEnableMultiplayerServersForTitleResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_Status_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_Status;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEnableMultiplayerServersForTitleResponse>();
	}
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The enabled status for the multiplayer server features for the title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The enabled status for the multiplayer server features for the title." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerEnableMultiplayerServersForTitleResponse, Status), Z_Construct_UEnum_PlayFab_ETitleMultiplayerServerEnabledStatus, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::NewProp_Status,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerEnableMultiplayerServersForTitleResponse",
		sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse),
		alignof(FMultiplayerEnableMultiplayerServersForTitleResponse),
		Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerEnableMultiplayerServersForTitleResponse"), sizeof(FMultiplayerEnableMultiplayerServersForTitleResponse), Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleResponse_Hash() { return 3938616389U; }

static_assert(std::is_polymorphic<FMultiplayerEnableMultiplayerServersForTitleRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerEnableMultiplayerServersForTitleRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEnableMultiplayerServersForTitleRequest"), sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest), Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEnableMultiplayerServersForTitleRequest>()
{
	return FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest(FMultiplayerEnableMultiplayerServersForTitleRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerEnableMultiplayerServersForTitleRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerEnableMultiplayerServersForTitleRequest>(FName(TEXT("MultiplayerEnableMultiplayerServersForTitleRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEnableMultiplayerServersForTitleRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be\n * Initializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On\n * average, it can take up to 20 minutes for the title to be enabled for the feature.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Enables the multiplayer server feature for a title and returns the enabled status. The enabled status can be\nInitializing, Enabled, and Disabled. It can up to 20 minutes or more for the title to be enabled for the feature. On\naverage, it can take up to 20 minutes for the title to be enabled for the feature." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEnableMultiplayerServersForTitleRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerEnableMultiplayerServersForTitleRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerEnableMultiplayerServersForTitleRequest",
		sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest),
		alignof(FMultiplayerEnableMultiplayerServersForTitleRequest),
		Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerEnableMultiplayerServersForTitleRequest"), sizeof(FMultiplayerEnableMultiplayerServersForTitleRequest), Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEnableMultiplayerServersForTitleRequest_Hash() { return 2886187411U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteRemoteUserRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteRemoteUserRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteRemoteUserRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteRemoteUserRequest"), sizeof(FMultiplayerDeleteRemoteUserRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteRemoteUserRequest>()
{
	return FMultiplayerDeleteRemoteUserRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest(FMultiplayerDeleteRemoteUserRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteRemoteUserRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteRemoteUserRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteRemoteUserRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteRemoteUserRequest>(FName(TEXT("MultiplayerDeleteRemoteUserRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteRemoteUserRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Username;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\n * information necessary to log on.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\ninformation necessary to log on." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteRemoteUserRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the multiplayer server where the remote user is to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the multiplayer server where the remote user is to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of the multiplayer server where the remote user is to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of the multiplayer server where the remote user is to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username of the remote user to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username of the remote user to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteRemoteUserRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_Username,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::NewProp_VmId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteRemoteUserRequest",
		sizeof(FMultiplayerDeleteRemoteUserRequest),
		alignof(FMultiplayerDeleteRemoteUserRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteRemoteUserRequest"), sizeof(FMultiplayerDeleteRemoteUserRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteRemoteUserRequest_Hash() { return 4101302163U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteContainerImageRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteContainerImageRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteContainerImageRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteContainerImageRequest"), sizeof(FMultiplayerDeleteContainerImageRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteContainerImageRequest>()
{
	return FMultiplayerDeleteContainerImageRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteContainerImageRequest(FMultiplayerDeleteContainerImageRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteContainerImageRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteContainerImageRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteContainerImageRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteContainerImageRequest>(FName(TEXT("MultiplayerDeleteContainerImageRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteContainerImageRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ImageName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ImageName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Removes the specified container image repository. After this operation, a 'docker pull' will fail for all the tags of\n * the specified image. Morever, ListContainerImages will not return the specified image.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes the specified container image repository. After this operation, a 'docker pull' will fail for all the tags of\nthe specified image. Morever, ListContainerImages will not return the specified image." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteContainerImageRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteContainerImageRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container image repository we want to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container image repository we want to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName = { "ImageName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteContainerImageRequest, ImageName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::NewProp_ImageName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteContainerImageRequest",
		sizeof(FMultiplayerDeleteContainerImageRequest),
		alignof(FMultiplayerDeleteContainerImageRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteContainerImageRequest"), sizeof(FMultiplayerDeleteContainerImageRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteContainerImageRequest_Hash() { return 3238976368U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteCertificateRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteCertificateRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteCertificateRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteCertificateRequest"), sizeof(FMultiplayerDeleteCertificateRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteCertificateRequest>()
{
	return FMultiplayerDeleteCertificateRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteCertificateRequest(FMultiplayerDeleteCertificateRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteCertificateRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteCertificateRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteCertificateRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteCertificateRequest>(FName(TEXT("MultiplayerDeleteCertificateRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteCertificateRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Name_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Name;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server game certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server game certificate." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteCertificateRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteCertificateRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The name of the certificate. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the certificate." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name = { "Name", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteCertificateRequest, Name), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::NewProp_Name,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteCertificateRequest",
		sizeof(FMultiplayerDeleteCertificateRequest),
		alignof(FMultiplayerDeleteCertificateRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteCertificateRequest"), sizeof(FMultiplayerDeleteCertificateRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteCertificateRequest_Hash() { return 3114888231U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildRegionRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildRegionRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteBuildRegionRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildRegionRequest"), sizeof(FMultiplayerDeleteBuildRegionRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildRegionRequest>()
{
	return FMultiplayerDeleteBuildRegionRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest(FMultiplayerDeleteBuildRegionRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteBuildRegionRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRegionRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRegionRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteBuildRegionRequest>(FName(TEXT("MultiplayerDeleteBuildRegionRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRegionRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Removes a multiplayer server build's region. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Removes a multiplayer server build's region." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildRegionRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string ID of the build we want to update regions for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string ID of the build we want to update regions for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build region to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build region to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildRegionRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::NewProp_Region,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildRegionRequest",
		sizeof(FMultiplayerDeleteBuildRegionRequest),
		alignof(FMultiplayerDeleteBuildRegionRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteBuildRegionRequest"), sizeof(FMultiplayerDeleteBuildRegionRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRegionRequest_Hash() { return 3571850684U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteBuildAliasRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildAliasRequest"), sizeof(FMultiplayerDeleteBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildAliasRequest>()
{
	return FMultiplayerDeleteBuildAliasRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest(FMultiplayerDeleteBuildAliasRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteBuildAliasRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildAliasRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildAliasRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteBuildAliasRequest>(FName(TEXT("MultiplayerDeleteBuildAliasRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildAliasRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server build alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server build alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildAliasRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias ID of the alias to perform the action on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias ID of the alias to perform the action on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildAliasRequest, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_AliasId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildAliasRequest",
		sizeof(FMultiplayerDeleteBuildAliasRequest),
		alignof(FMultiplayerDeleteBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteBuildAliasRequest"), sizeof(FMultiplayerDeleteBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildAliasRequest_Hash() { return 815873239U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteBuildRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteBuildRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteBuildRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteBuildRequest"), sizeof(FMultiplayerDeleteBuildRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteBuildRequest>()
{
	return FMultiplayerDeleteBuildRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteBuildRequest(FMultiplayerDeleteBuildRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteBuildRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteBuildRequest>(FName(TEXT("MultiplayerDeleteBuildRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteBuildRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server build." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteBuildRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of the build to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of the build to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteBuildRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteBuildRequest",
		sizeof(FMultiplayerDeleteBuildRequest),
		alignof(FMultiplayerDeleteBuildRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteBuildRequest"), sizeof(FMultiplayerDeleteBuildRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteBuildRequest_Hash() { return 496902902U; }

static_assert(std::is_polymorphic<FMultiplayerEmptyResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerEmptyResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerEmptyResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerEmptyResponse"), sizeof(FMultiplayerEmptyResponse), Get_Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerEmptyResponse>()
{
	return FMultiplayerEmptyResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerEmptyResponse(FMultiplayerEmptyResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerEmptyResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEmptyResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEmptyResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerEmptyResponse>(FName(TEXT("MultiplayerEmptyResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerEmptyResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerEmptyResponse>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerEmptyResponse",
		sizeof(FMultiplayerEmptyResponse),
		alignof(FMultiplayerEmptyResponse),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerEmptyResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerEmptyResponse"), sizeof(FMultiplayerEmptyResponse), Get_Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerEmptyResponse_Hash() { return 702078774U; }

static_assert(std::is_polymorphic<FMultiplayerDeleteAssetRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerDeleteAssetRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerDeleteAssetRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerDeleteAssetRequest"), sizeof(FMultiplayerDeleteAssetRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerDeleteAssetRequest>()
{
	return FMultiplayerDeleteAssetRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerDeleteAssetRequest(FMultiplayerDeleteAssetRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerDeleteAssetRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteAssetRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteAssetRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerDeleteAssetRequest>(FName(TEXT("MultiplayerDeleteAssetRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerDeleteAssetRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FileName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_FileName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Deletes a multiplayer server game asset for a title. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Deletes a multiplayer server game asset for a title." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerDeleteAssetRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteAssetRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The filename of the asset to delete. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The filename of the asset to delete." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName = { "FileName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerDeleteAssetRequest, FileName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::NewProp_FileName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerDeleteAssetRequest",
		sizeof(FMultiplayerDeleteAssetRequest),
		alignof(FMultiplayerDeleteAssetRequest),
		Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerDeleteAssetRequest"), sizeof(FMultiplayerDeleteAssetRequest), Get_Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerDeleteAssetRequest_Hash() { return 4094803586U; }

static_assert(std::is_polymorphic<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse"), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>()
{
	return FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>(FName(TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RequestId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_RequestId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_WasApproved_MetaData[];
#endif
		static void NewProp_WasApproved_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_WasApproved;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Id of the change request that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Id of the change request that was created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId = { "RequestId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse, RequestId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Determines if the request was approved or not. When false, our team is reviewing and may respond within 2 business days. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines if the request was approved or not. When false, our team is reviewing and may respond within 2 business days." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_SetBit(void* Obj)
	{
		((FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse*)Obj)->WasApproved = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved = { "WasApproved", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_RequestId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::NewProp_WasApproved,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse",
		sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse),
		alignof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeResponse"), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse_Hash() { return 3052898761U; }

static_assert(std::is_polymorphic<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest"), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>()
{
	return FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>(FName(TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ChangeDescription_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ChangeDescription;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Changes_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Changes_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Changes;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContactEmail_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ContactEmail;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Notes_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Notes;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartDate_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartDate;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a request to change a title's multiplayer server quotas. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a request to change a title's multiplayer server quotas." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** A brief description of the requested changes. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A brief description of the requested changes." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription = { "ChangeDescription", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ChangeDescription), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_Inner = { "Changes", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Changes to make to the titles cores quota. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Changes to make to the titles cores quota." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes = { "Changes", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Changes), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Email to be contacted by our team about this request. Only required when a request is not approved. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Email to be contacted by our team about this request. Only required when a request is not approved." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail = { "ContactEmail", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, ContactEmail), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Additional information about this request that our team can use to better understand the requirements. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Additional information about this request that our team can use to better understand the requirements." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes = { "Notes", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, Notes), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** When these changes would need to be in effect. Only required when a request is not approved. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When these changes would need to be in effect. Only required when a request is not approved." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate = { "StartDate", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest, StartDate), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ChangeDescription,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Changes,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_ContactEmail,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_Notes,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::NewProp_StartDate,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest",
		sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest),
		alignof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateTitleMultiplayerServersQuotaChangeRequest"), sizeof(FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest_Hash() { return 1447396092U; }

static_assert(std::is_polymorphic<FMultiplayerCreateRemoteUserResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateRemoteUserResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateRemoteUserResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateRemoteUserResponse"), sizeof(FMultiplayerCreateRemoteUserResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateRemoteUserResponse>()
{
	return FMultiplayerCreateRemoteUserResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateRemoteUserResponse(FMultiplayerCreateRemoteUserResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateRemoteUserResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateRemoteUserResponse>(FName(TEXT("MultiplayerCreateRemoteUserResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ExpirationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ExpirationTime;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Password_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Password;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Username;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateRemoteUserResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The expiration time for the remote user created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The expiration time for the remote user created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime = { "ExpirationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, ExpirationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The generated password for the remote user that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The generated password for the remote user that was created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password = { "Password", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, Password), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username for the remote user that was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username for the remote user that was created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserResponse, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_ExpirationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Password,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::NewProp_Username,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateRemoteUserResponse",
		sizeof(FMultiplayerCreateRemoteUserResponse),
		alignof(FMultiplayerCreateRemoteUserResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateRemoteUserResponse"), sizeof(FMultiplayerCreateRemoteUserResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserResponse_Hash() { return 2111868628U; }

static_assert(std::is_polymorphic<FMultiplayerCreateRemoteUserRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateRemoteUserRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateRemoteUserRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateRemoteUserRequest"), sizeof(FMultiplayerCreateRemoteUserRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateRemoteUserRequest>()
{
	return FMultiplayerCreateRemoteUserRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateRemoteUserRequest(FMultiplayerCreateRemoteUserRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateRemoteUserRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateRemoteUserRequest>(FName(TEXT("MultiplayerCreateRemoteUserRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateRemoteUserRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ExpirationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ExpirationTime;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Region_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Region;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Username_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Username;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_VmId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\n * information necessary to log on.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a remote user to log on to a VM for a multiplayer server build in a specific region. Returns user credential\ninformation necessary to log on." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateRemoteUserRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID of to create the remote user for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID of to create the remote user for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The expiration time for the remote user created. Defaults to expiring in one day if not specified. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The expiration time for the remote user created. Defaults to expiring in one day if not specified." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime = { "ExpirationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, ExpirationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region of virtual machine to create the remote user for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region of virtual machine to create the remote user for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region = { "Region", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, Region), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The username to create the remote user with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The username to create the remote user with." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username = { "Username", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, Username), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The virtual machine ID the multiplayer server is located on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The virtual machine ID the multiplayer server is located on." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId = { "VmId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateRemoteUserRequest, VmId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_ExpirationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Region,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_Username,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::NewProp_VmId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateRemoteUserRequest",
		sizeof(FMultiplayerCreateRemoteUserRequest),
		alignof(FMultiplayerCreateRemoteUserRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateRemoteUserRequest"), sizeof(FMultiplayerCreateRemoteUserRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateRemoteUserRequest_Hash() { return 858232633U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithProcessBasedServerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithProcessBasedServerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse"), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithProcessBasedServerResponse>()
{
	return FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse(FMultiplayerCreateBuildWithProcessBasedServerResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerResponse>(FName(TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CreationTime;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IsOSPreview_MetaData[];
#endif
		static void NewProp_IsOSPreview_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_IsOSPreview;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The working directory for the game process. If this is not provided, the working directory will be set based on the\n     * mount path of the game server executable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The working directory for the game process. If this is not provided, the working directory will be set based on the\nmount path of the game server executable." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for this build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\n     * detect any breaking changes before they are released to retail. Retail builds should set this value to false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\ndetect any breaking changes before they are released to retail. Retail builds should set this value to false." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->IsOSPreview = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview = { "IsOSPreview", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server is started, including any arguments. The path to any executable is\n     * relative to the root asset folder when unzipped.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments. The path to any executable is\nrelative to the root asset folder when unzipped." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_CreationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_GameWorkingDirectory,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_IsOSPreview,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_OsPlatform,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_ServerType,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithProcessBasedServerResponse",
		sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse),
		alignof(FMultiplayerCreateBuildWithProcessBasedServerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithProcessBasedServerResponse"), sizeof(FMultiplayerCreateBuildWithProcessBasedServerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerResponse_Hash() { return 1835994793U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithProcessBasedServerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithProcessBasedServerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest"), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithProcessBasedServerRequest>()
{
	return FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest(FMultiplayerCreateBuildWithProcessBasedServerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerRequest>(FName(TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithProcessBasedServerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IsOSPreview_MetaData[];
#endif
		static void NewProp_IsOSPreview_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_IsOSPreview;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Creates a multiplayer server build with the game server running as a process and returns information about the build\n * creation request.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with the game server running as a process and returns information about the build\ncreation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithProcessBasedServerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The working directory for the game process. If this is not provided, the working directory will be set based on the\n     * mount path of the game server executable.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The working directory for the game process. If this is not provided, the working directory will be set based on the\nmount path of the game server executable." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\n     * detect any breaking changes before they are released to retail. Retail builds should set this value to false.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Indicates whether this build will be created using the OS Preview versionPreview OS is recommended for dev builds to\ndetect any breaking changes before they are released to retail. Retail builds should set this value to false." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerRequest*)Obj)->IsOSPreview = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview = { "IsOSPreview", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The command to run when the multiplayer server is started, including any arguments. The path to any executable should be\n     * relative to the root asset folder when unzipped.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments. The path to any executable should be\nrelative to the root asset folder when unzipped." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithProcessBasedServerRequest*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithProcessBasedServerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_GameWorkingDirectory,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_InstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_IsOSPreview,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_OsPlatform,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_StartMultiplayerServerCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithProcessBasedServerRequest",
		sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest),
		alignof(FMultiplayerCreateBuildWithProcessBasedServerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithProcessBasedServerRequest"), sizeof(FMultiplayerCreateBuildWithProcessBasedServerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithProcessBasedServerRequest_Hash() { return 612460020U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithManagedContainerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithManagedContainerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithManagedContainerResponse"), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithManagedContainerResponse>()
{
	return FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse(FMultiplayerCreateBuildWithManagedContainerResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithManagedContainerResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithManagedContainerResponse>(FName(TEXT("MultiplayerCreateBuildWithManagedContainerResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CreationTime;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithManagedContainerResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The directory containing the game executable. This would be the start path of the game assets that contain the main game\n     * server executable. If not provided, a best effort will be made to extract it from the start game command.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The directory containing the game executable. This would be the start path of the game assets that contain the main game\nserver executable. If not provided, a best effort will be made to extract it from the start game command." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for this build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_CreationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_GameWorkingDirectory,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_InstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_OsPlatform,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_ServerType,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_StartMultiplayerServerCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithManagedContainerResponse",
		sizeof(FMultiplayerCreateBuildWithManagedContainerResponse),
		alignof(FMultiplayerCreateBuildWithManagedContainerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithManagedContainerResponse"), sizeof(FMultiplayerCreateBuildWithManagedContainerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerResponse_Hash() { return 953710261U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithManagedContainerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithManagedContainerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithManagedContainerRequest"), sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithManagedContainerRequest>()
{
	return FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest(FMultiplayerCreateBuildWithManagedContainerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithManagedContainerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithManagedContainerRequest>(FName(TEXT("MultiplayerCreateBuildWithManagedContainerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithManagedContainerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameWorkingDirectory_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_GameWorkingDirectory;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_InstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_StartMultiplayerServerCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_StartMultiplayerServerCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build with a managed container and returns information about the build creation request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with a managed container and returns information about the build creation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithManagedContainerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container to create a build from. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container to create a build from." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * The directory containing the game executable. This would be the start path of the game assets that contain the main game\n     * server executable. If not provided, a best effort will be made to extract it from the start game command.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The directory containing the game executable. This would be the start path of the game assets that contain the main game\nserver executable. If not provided, a best effort will be made to extract it from the start game command." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory = { "GameWorkingDirectory", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, GameWorkingDirectory), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The instrumentation configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration = { "InstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, InstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The command to run when the multiplayer server is started, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The command to run when the multiplayer server is started, including any arguments." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand = { "StartMultiplayerServerCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, StartMultiplayerServerCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithManagedContainerRequest*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithManagedContainerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_GameWorkingDirectory,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_InstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_StartMultiplayerServerCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithManagedContainerRequest",
		sizeof(FMultiplayerCreateBuildWithManagedContainerRequest),
		alignof(FMultiplayerCreateBuildWithManagedContainerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithManagedContainerRequest"), sizeof(FMultiplayerCreateBuildWithManagedContainerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithManagedContainerRequest_Hash() { return 3703555463U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithCustomContainerResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateBuildWithCustomContainerResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithCustomContainerResponse"), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithCustomContainerResponse>()
{
	return FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse(FMultiplayerCreateBuildWithCustomContainerResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithCustomContainerResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithCustomContainerResponse>(FName(TEXT("MultiplayerCreateBuildWithCustomContainerResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CreationTime_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CreationTime;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomGameContainerImage_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomGameContainerImage;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LinuxInstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_LinuxInstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_OsPlatform_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_OsPlatform;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerType_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ServerType;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithCustomContainerResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerResponse*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string build ID. Must be unique for every build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string build ID. Must be unique for every build." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId = { "BuildId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, BuildId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container of the build." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The time the build was created in UTC. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The time the build was created in UTC." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime = { "CreationTime", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, CreationTime), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The custom game container image reference information. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The custom game container image reference information." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage = { "CustomGameContainerImage", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, CustomGameContainerImage), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game assets for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game assets for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The Linux instrumentation configuration for this build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Linux instrumentation configuration for this build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration = { "LinuxInstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, LinuxInstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The metadata of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The metadata of the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM of the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM of the build." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The OS platform used for running the game process. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The OS platform used for running the game process." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform = { "OsPlatform", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, OsPlatform), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports the build is mapped on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports the build is mapped on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The type of game server being hosted. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The type of game server being hosted." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType = { "ServerType", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, ServerType), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerResponse*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size the build was created on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size the build was created on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerResponse, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ContainerRunCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CreationTime,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_CustomGameContainerImage,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_LinuxInstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_OsPlatform,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_ServerType,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithCustomContainerResponse",
		sizeof(FMultiplayerCreateBuildWithCustomContainerResponse),
		alignof(FMultiplayerCreateBuildWithCustomContainerResponse),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithCustomContainerResponse"), sizeof(FMultiplayerCreateBuildWithCustomContainerResponse), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerResponse_Hash() { return 3332969248U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildWithCustomContainerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildWithCustomContainerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildWithCustomContainerRequest"), sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildWithCustomContainerRequest>()
{
	return FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest(FMultiplayerCreateBuildWithCustomContainerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildWithCustomContainerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildWithCustomContainerRequest>(FName(TEXT("MultiplayerCreateBuildWithCustomContainerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildWithCustomContainerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AreAssetsReadonly_MetaData[];
#endif
		static void NewProp_AreAssetsReadonly_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_AreAssetsReadonly;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_BuildName;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_ContainerFlavor_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerFlavor_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_ContainerFlavor;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerImageReference_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ContainerImageReference;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ContainerRunCommand_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_ContainerRunCommand;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameAssetReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameAssetReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameAssetReferences;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_GameCertificateReferences_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GameCertificateReferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_GameCertificateReferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LinuxInstrumentationConfiguration_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_LinuxInstrumentationConfiguration;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Metadata_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Metadata;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MultiplayerServerCountPerVm_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_MultiplayerServerCountPerVm;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Ports_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Ports_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Ports;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_RegionConfigurations_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionConfigurations_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_RegionConfigurations;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_UseStreamingForAssetDownloads_MetaData[];
#endif
		static void NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_UseStreamingForAssetDownloads;
		static const UE4CodeGen_Private::FBytePropertyParams NewProp_VmSize_Underlying;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_VmSize_MetaData[];
#endif
		static const UE4CodeGen_Private::FEnumPropertyParams NewProp_VmSize;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build with a custom container and returns information about the build creation request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build with a custom container and returns information about the build creation request." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildWithCustomContainerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\n     * will have the same assets mounted in the container.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will not be copied for each server inside the VM. All serverswill run from the same set of assets, or\nwill have the same assets mounted in the container." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerRequest*)Obj)->AreAssetsReadonly = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly = { "AreAssetsReadonly", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The build name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The build name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName = { "BuildName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, BuildName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The flavor of container to create a build from. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The flavor of container to create a build from." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor = { "ContainerFlavor", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerFlavor), Z_Construct_UEnum_PlayFab_EContainerFlavor, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container reference, consisting of the image name and tag. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container reference, consisting of the image name and tag." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference = { "ContainerImageReference", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerImageReference), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The container command to run when the multiplayer server has been allocated, including any arguments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The container command to run when the multiplayer server has been allocated, including any arguments." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand = { "ContainerRunCommand", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, ContainerRunCommand), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_Inner = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The list of game assets related to the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of game assets related to the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences = { "GameAssetReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, GameAssetReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_Inner = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The game certificates for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The game certificates for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences = { "GameCertificateReferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, GameCertificateReferences), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The Linux instrumentation configuration for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Linux instrumentation configuration for the build." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration = { "LinuxInstrumentationConfiguration", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, LinuxInstrumentationConfiguration), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\n     * Game Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Metadata to tag the build. The keys are case insensitive. The build metadata is made available to the server through\nGame Server SDK (GSDK).Constraints: Maximum number of keys: 30, Maximum key length: 50, Maximum value length: 100" },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata = { "Metadata", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, Metadata), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The number of multiplayer servers to host on a single VM. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The number of multiplayer servers to host on a single VM." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm = { "MultiplayerServerCountPerVm", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, MultiplayerServerCountPerVm), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_Inner = { "Ports", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The ports to map the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ports to map the build on." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports = { "Ports", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, Ports), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_Inner = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The region configurations for the build. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The region configurations for the build." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations = { "RegionConfigurations", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, RegionConfigurations), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/**\n     * When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\n     * disc.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When true, assets will be downloaded and uncompressed in memory, without the compressedversion being written first to\ndisc." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit(void* Obj)
	{
		((FMultiplayerCreateBuildWithCustomContainerRequest*)Obj)->UseStreamingForAssetDownloads = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads = { "UseStreamingForAssetDownloads", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), &Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads_MetaData)) };
	const UE4CodeGen_Private::FBytePropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_Underlying = { "UnderlyingType", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Byte, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The VM size to create the build on. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The VM size to create the build on." },
	};
#endif
	const UE4CodeGen_Private::FEnumPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize = { "VmSize", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Enum, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildWithCustomContainerRequest, VmSize), Z_Construct_UEnum_PlayFab_EAzureVmSize, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_AreAssetsReadonly,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_BuildName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerFlavor,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerImageReference,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_ContainerRunCommand,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameAssetReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_GameCertificateReferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_LinuxInstrumentationConfiguration,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Metadata,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_MultiplayerServerCountPerVm,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_Ports,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_RegionConfigurations,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_UseStreamingForAssetDownloads,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize_Underlying,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::NewProp_VmSize,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildWithCustomContainerRequest",
		sizeof(FMultiplayerCreateBuildWithCustomContainerRequest),
		alignof(FMultiplayerCreateBuildWithCustomContainerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildWithCustomContainerRequest"), sizeof(FMultiplayerCreateBuildWithCustomContainerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildWithCustomContainerRequest_Hash() { return 784869822U; }

static_assert(std::is_polymorphic<FMultiplayerCreateBuildAliasRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateBuildAliasRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateBuildAliasRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateBuildAliasRequest"), sizeof(FMultiplayerCreateBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateBuildAliasRequest>()
{
	return FMultiplayerCreateBuildAliasRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateBuildAliasRequest(FMultiplayerCreateBuildAliasRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateBuildAliasRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildAliasRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildAliasRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateBuildAliasRequest>(FName(TEXT("MultiplayerCreateBuildAliasRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateBuildAliasRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** Creates a multiplayer server build alias and returns the created alias. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Creates a multiplayer server build alias and returns the created alias." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateBuildAliasRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateBuildAliasRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_AliasName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_BuildSelectionCriteria,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::NewProp_CustomTags,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateBuildAliasRequest",
		sizeof(FMultiplayerCreateBuildAliasRequest),
		alignof(FMultiplayerCreateBuildAliasRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateBuildAliasRequest"), sizeof(FMultiplayerCreateBuildAliasRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateBuildAliasRequest_Hash() { return 650908998U; }

static_assert(std::is_polymorphic<FMultiplayerBuildAliasDetailsResponse>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerBuildAliasDetailsResponse cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerBuildAliasDetailsResponse::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerBuildAliasDetailsResponse"), sizeof(FMultiplayerBuildAliasDetailsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerBuildAliasDetailsResponse>()
{
	return FMultiplayerBuildAliasDetailsResponse::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse(FMultiplayerBuildAliasDetailsResponse::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerBuildAliasDetailsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerBuildAliasDetailsResponse
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerBuildAliasDetailsResponse()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerBuildAliasDetailsResponse>(FName(TEXT("MultiplayerBuildAliasDetailsResponse")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerBuildAliasDetailsResponse;
	struct Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_AliasName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_AliasName;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_BuildSelectionCriteria_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BuildSelectionCriteria_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_BuildSelectionCriteria;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "///////////////////////////////////////////////////////\n// MultiplayerServer\n//////////////////////////////////////////////////////\n" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "/\n MultiplayerServer" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerBuildAliasDetailsResponse>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The guid string alias Id of the alias to be created or updated. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The guid string alias Id of the alias to be created or updated." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId = { "AliasId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, AliasId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** The alias name. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The alias name." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName = { "AliasName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, AliasName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_Inner = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | MultiplayerServer Models" },
		{ "Comment", "/** Array of build selection criteria. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Array of build selection criteria." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria = { "BuildSelectionCriteria", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerBuildAliasDetailsResponse, BuildSelectionCriteria), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_AliasName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::NewProp_BuildSelectionCriteria,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerBuildAliasDetailsResponse",
		sizeof(FMultiplayerBuildAliasDetailsResponse),
		alignof(FMultiplayerBuildAliasDetailsResponse),
		Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerBuildAliasDetailsResponse"), sizeof(FMultiplayerBuildAliasDetailsResponse), Get_Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerBuildAliasDetailsResponse_Hash() { return 3664113240U; }

static_assert(std::is_polymorphic<FMultiplayerListServerBackfillTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListServerBackfillTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListServerBackfillTicketsForPlayerResult"), sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListServerBackfillTicketsForPlayerResult>()
{
	return FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult(FMultiplayerListServerBackfillTicketsForPlayerResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListServerBackfillTicketsForPlayerResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerResult>(FName(TEXT("MultiplayerListServerBackfillTicketsForPlayerResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerResult;
	struct Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketIds_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketIds;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The list of backfill ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of backfill ticket Ids the user is a member of." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds = { "TicketIds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerResult, TicketIds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::NewProp_TicketIds,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListServerBackfillTicketsForPlayerResult",
		sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult),
		alignof(FMultiplayerListServerBackfillTicketsForPlayerResult),
		Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListServerBackfillTicketsForPlayerResult"), sizeof(FMultiplayerListServerBackfillTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerResult_Hash() { return 927917721U; }

static_assert(std::is_polymorphic<FMultiplayerListServerBackfillTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListServerBackfillTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest"), sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListServerBackfillTicketsForPlayerRequest>()
{
	return FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest(FMultiplayerListServerBackfillTicketsForPlayerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerRequest>(FName(TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListServerBackfillTicketsForPlayerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** List all server backfill ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "List all server backfill ticket Ids the user is a member of." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListServerBackfillTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key for which to find the ticket Ids. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key for which to find the ticket Ids." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the tickets are in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the tickets are in." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListServerBackfillTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListServerBackfillTicketsForPlayerRequest",
		sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest),
		alignof(FMultiplayerListServerBackfillTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListServerBackfillTicketsForPlayerRequest"), sizeof(FMultiplayerListServerBackfillTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListServerBackfillTicketsForPlayerRequest_Hash() { return 3336873411U; }

static_assert(std::is_polymorphic<FMultiplayerListMatchmakingTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerListMatchmakingTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMatchmakingTicketsForPlayerResult"), sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMatchmakingTicketsForPlayerResult>()
{
	return FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult(FMultiplayerListMatchmakingTicketsForPlayerResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListMatchmakingTicketsForPlayerResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerResult>(FName(TEXT("MultiplayerListMatchmakingTicketsForPlayerResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerResult;
	struct Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketIds_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketIds;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The list of ticket Ids the user is a member of. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The list of ticket Ids the user is a member of." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds = { "TicketIds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerResult, TicketIds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::NewProp_TicketIds,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerListMatchmakingTicketsForPlayerResult",
		sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult),
		alignof(FMultiplayerListMatchmakingTicketsForPlayerResult),
		Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListMatchmakingTicketsForPlayerResult"), sizeof(FMultiplayerListMatchmakingTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerResult_Hash() { return 3587285034U; }

static_assert(std::is_polymorphic<FMultiplayerListMatchmakingTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerListMatchmakingTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest"), sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerListMatchmakingTicketsForPlayerRequest>()
{
	return FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest(FMultiplayerListMatchmakingTicketsForPlayerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerRequest>(FName(TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerListMatchmakingTicketsForPlayerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * If the caller is a title, the EntityKey in the request is required. If the caller is a player, then it is optional. If\n * it is provided it must match the caller's entity.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "If the caller is a title, the EntityKey in the request is required. If the caller is a player, then it is optional. If\nit is provided it must match the caller's entity." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerListMatchmakingTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key for which to find the ticket Ids. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key for which to find the ticket Ids." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerListMatchmakingTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerListMatchmakingTicketsForPlayerRequest",
		sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest),
		alignof(FMultiplayerListMatchmakingTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerListMatchmakingTicketsForPlayerRequest"), sizeof(FMultiplayerListMatchmakingTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerListMatchmakingTicketsForPlayerRequest_Hash() { return 1777020534U; }

static_assert(std::is_polymorphic<FMultiplayerJoinMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerJoinMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerJoinMatchmakingTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinMatchmakingTicketResult"), sizeof(FMultiplayerJoinMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinMatchmakingTicketResult>()
{
	return FMultiplayerJoinMatchmakingTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult(FMultiplayerJoinMatchmakingTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerJoinMatchmakingTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerJoinMatchmakingTicketResult>(FName(TEXT("MultiplayerJoinMatchmakingTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinMatchmakingTicketResult>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerJoinMatchmakingTicketResult",
		sizeof(FMultiplayerJoinMatchmakingTicketResult),
		alignof(FMultiplayerJoinMatchmakingTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerJoinMatchmakingTicketResult"), sizeof(FMultiplayerJoinMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketResult_Hash() { return 3243416279U; }

static_assert(std::is_polymorphic<FMultiplayerJoinMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerJoinMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerJoinMatchmakingTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerJoinMatchmakingTicketRequest"), sizeof(FMultiplayerJoinMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerJoinMatchmakingTicketRequest>()
{
	return FMultiplayerJoinMatchmakingTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest(FMultiplayerJoinMatchmakingTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerJoinMatchmakingTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerJoinMatchmakingTicketRequest>(FName(TEXT("MultiplayerJoinMatchmakingTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerJoinMatchmakingTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Member_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Member;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Add the player to a matchmaking ticket and specify all of its matchmaking attributes. Players can join a ticket if and\n * only if their EntityKeys are already listed in the ticket's Members list. The matchmaking service automatically starts\n * matching the ticket against other matchmaking tickets once all players have joined the ticket. It is not possible to\n * join a ticket once it has started matching.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Add the player to a matchmaking ticket and specify all of its matchmaking attributes. Players can join a ticket if and\nonly if their EntityKeys are already listed in the ticket's Members list. The matchmaking service automatically starts\nmatching the ticket against other matchmaking tickets once all players have joined the ticket. It is not possible to\njoin a ticket once it has started matching." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerJoinMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The User who wants to join the ticket. Their Id must be listed in PlayFabIdsToMatchWith." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member = { "Member", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, Member), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to join. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to join." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerJoinMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_Member,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerJoinMatchmakingTicketRequest",
		sizeof(FMultiplayerJoinMatchmakingTicketRequest),
		alignof(FMultiplayerJoinMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerJoinMatchmakingTicketRequest"), sizeof(FMultiplayerJoinMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerJoinMatchmakingTicketRequest_Hash() { return 3459196290U; }

static_assert(std::is_polymorphic<FMultiplayerGetServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetServerBackfillTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetServerBackfillTicketResult"), sizeof(FMultiplayerGetServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetServerBackfillTicketResult>()
{
	return FMultiplayerGetServerBackfillTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult(FMultiplayerGetServerBackfillTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetServerBackfillTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetServerBackfillTicketResult>(FName(TEXT("MultiplayerGetServerBackfillTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CancellationReasonString_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CancellationReasonString;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Created_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Created;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Status;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetServerBackfillTicketResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString = { "CancellationReasonString", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, CancellationReasonString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The server date and time at which ticket was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server date and time at which ticket was created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created = { "Created", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Created), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that are part of this ticket, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that are part of this ticket, along with their team assignments." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server the members are connected to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server the members are connected to." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The current ticket status. Possible values are: WaitingForMatch, Canceled and Matched. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current ticket status. Possible values are: WaitingForMatch, Canceled and Matched." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, Status), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_CancellationReasonString,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Created,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_GiveUpAfterSeconds,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_MatchId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Members,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_ServerDetails,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_Status,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetServerBackfillTicketResult",
		sizeof(FMultiplayerGetServerBackfillTicketResult),
		alignof(FMultiplayerGetServerBackfillTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetServerBackfillTicketResult"), sizeof(FMultiplayerGetServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketResult_Hash() { return 3343731481U; }

static_assert(std::is_polymorphic<FMultiplayerGetServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetServerBackfillTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetServerBackfillTicketRequest"), sizeof(FMultiplayerGetServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetServerBackfillTicketRequest>()
{
	return FMultiplayerGetServerBackfillTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest(FMultiplayerGetServerBackfillTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetServerBackfillTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetServerBackfillTicketRequest>(FName(TEXT("MultiplayerGetServerBackfillTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetServerBackfillTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * The ticket includes the players, their attributes, their teams, the ticket status, the match Id and the server details\n * when applicable, etc. Only servers can get the ticket.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ticket includes the players, their attributes, their teams, the ticket status, the match Id and the server details\nwhen applicable, etc. Only servers can get the ticket." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetServerBackfillTicketRequest*)Obj)->EscapeObject = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetServerBackfillTicketRequest), &Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetServerBackfillTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_EscapeObject,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetServerBackfillTicketRequest",
		sizeof(FMultiplayerGetServerBackfillTicketRequest),
		alignof(FMultiplayerGetServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetServerBackfillTicketRequest"), sizeof(FMultiplayerGetServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetServerBackfillTicketRequest_Hash() { return 2764775656U; }

static_assert(std::is_polymorphic<FMultiplayerGetQueueStatisticsResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetQueueStatisticsResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetQueueStatisticsResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetQueueStatisticsResult"), sizeof(FMultiplayerGetQueueStatisticsResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetQueueStatisticsResult>()
{
	return FMultiplayerGetQueueStatisticsResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetQueueStatisticsResult(FMultiplayerGetQueueStatisticsResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetQueueStatisticsResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetQueueStatisticsResult>(FName(TEXT("MultiplayerGetQueueStatisticsResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsResult;
	struct Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_NumberOfPlayersMatching_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_NumberOfPlayersMatching;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TimeToMatchStatisticsInSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_TimeToMatchStatisticsInSeconds;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetQueueStatisticsResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The current number of players in the matchmaking queue, who are waiting to be matched. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current number of players in the matchmaking queue, who are waiting to be matched." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching = { "NumberOfPlayersMatching", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsResult, NumberOfPlayersMatching), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** Statistics representing the time (in seconds) it takes for tickets to find a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Statistics representing the time (in seconds) it takes for tickets to find a match." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds = { "TimeToMatchStatisticsInSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsResult, TimeToMatchStatisticsInSeconds), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_NumberOfPlayersMatching,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::NewProp_TimeToMatchStatisticsInSeconds,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetQueueStatisticsResult",
		sizeof(FMultiplayerGetQueueStatisticsResult),
		alignof(FMultiplayerGetQueueStatisticsResult),
		Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetQueueStatisticsResult"), sizeof(FMultiplayerGetQueueStatisticsResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsResult_Hash() { return 828141155U; }

static_assert(std::is_polymorphic<FMultiplayerGetQueueStatisticsRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetQueueStatisticsRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetQueueStatisticsRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetQueueStatisticsRequest"), sizeof(FMultiplayerGetQueueStatisticsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetQueueStatisticsRequest>()
{
	return FMultiplayerGetQueueStatisticsRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest(FMultiplayerGetQueueStatisticsRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetQueueStatisticsRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetQueueStatisticsRequest>(FName(TEXT("MultiplayerGetQueueStatisticsRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetQueueStatisticsRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Returns the matchmaking statistics for a queue. These include the number of players matching and the statistics related\n * to the time to match statistics in seconds (average and percentiles). Statistics are refreshed once every 5 minutes.\n * Servers can access all statistics no matter what the ClientStatisticsVisibility is configured to. Clients can access\n * statistics according to the ClientStatisticsVisibility. Client requests are forbidden if all visibility fields are\n * false.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Returns the matchmaking statistics for a queue. These include the number of players matching and the statistics related\nto the time to match statistics in seconds (average and percentiles). Statistics are refreshed once every 5 minutes.\nServers can access all statistics no matter what the ClientStatisticsVisibility is configured to. Clients can access\nstatistics according to the ClientStatisticsVisibility. Client requests are forbidden if all visibility fields are\nfalse." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetQueueStatisticsRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetQueueStatisticsRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetQueueStatisticsRequest",
		sizeof(FMultiplayerGetQueueStatisticsRequest),
		alignof(FMultiplayerGetQueueStatisticsRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetQueueStatisticsRequest"), sizeof(FMultiplayerGetQueueStatisticsRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetQueueStatisticsRequest_Hash() { return 2277758667U; }

static_assert(std::is_polymorphic<FMultiplayerGetMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMatchmakingTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchmakingTicketResult"), sizeof(FMultiplayerGetMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchmakingTicketResult>()
{
	return FMultiplayerGetMatchmakingTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult(FMultiplayerGetMatchmakingTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMatchmakingTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMatchmakingTicketResult>(FName(TEXT("MultiplayerGetMatchmakingTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CancellationReasonString_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_CancellationReasonString;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Created_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Created;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Creator_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Creator;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Members;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_MembersToMatchWith_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MembersToMatchWith_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_MembersToMatchWith;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Status_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_Status;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchmakingTicketResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The reason why the current ticket was canceled. This field is only set if the ticket is in canceled state." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString = { "CancellationReasonString", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, CancellationReasonString), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The server date and time at which ticket was created. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server date and time at which ticket was created." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created = { "Created", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Created), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Creator's entity key. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Creator's entity key." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator = { "Creator", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Creator), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that have joined this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that have joined this ticket." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_Inner = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of PlayFab Ids of Users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of PlayFab Ids of Users to match with." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, MembersToMatchWith), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * The current ticket status. Possible values are: WaitingForPlayers, WaitingForMatch, WaitingForServer, Canceled and\n     * Matched.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The current ticket status. Possible values are: WaitingForPlayers, WaitingForMatch, WaitingForServer, Canceled and\nMatched." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status = { "Status", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, Status), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_CancellationReasonString,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Created,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Creator,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_GiveUpAfterSeconds,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MatchId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Members,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_MembersToMatchWith,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_Status,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMatchmakingTicketResult",
		sizeof(FMultiplayerGetMatchmakingTicketResult),
		alignof(FMultiplayerGetMatchmakingTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMatchmakingTicketResult"), sizeof(FMultiplayerGetMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketResult_Hash() { return 3492809514U; }

static_assert(std::is_polymorphic<FMultiplayerGetMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMatchmakingTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchmakingTicketRequest"), sizeof(FMultiplayerGetMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchmakingTicketRequest>()
{
	return FMultiplayerGetMatchmakingTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest(FMultiplayerGetMatchmakingTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMatchmakingTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMatchmakingTicketRequest>(FName(TEXT("MultiplayerGetMatchmakingTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchmakingTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * The ticket includes the invited players, their attributes if they have joined, the ticket status, the match Id when\n * applicable, etc. Only servers, the ticket creator and the invited players can get the ticket.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The ticket includes the invited players, their attributes if they have joined, the ticket status, the match Id when\napplicable, etc. Only servers, the ticket creator and the invited players can get the ticket." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchmakingTicketRequest*)Obj)->EscapeObject = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetMatchmakingTicketRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_EscapeObject,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMatchmakingTicketRequest",
		sizeof(FMultiplayerGetMatchmakingTicketRequest),
		alignof(FMultiplayerGetMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMatchmakingTicketRequest"), sizeof(FMultiplayerGetMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchmakingTicketRequest_Hash() { return 3009216631U; }

static_assert(std::is_polymorphic<FMultiplayerGetMatchResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerGetMatchResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMatchResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchResult"), sizeof(FMultiplayerGetMatchResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchResult>()
{
	return FMultiplayerGetMatchResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMatchResult(FMultiplayerGetMatchResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMatchResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMatchResult>(FName(TEXT("MultiplayerGetMatchResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchResult;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_MatchId;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RegionPreferences_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_RegionPreferences;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchResult, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Users that are matched together, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Users that are matched together, along with their team assignments." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchResult, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * A list of regions that the match could be played in sorted by preference. This value is only set if the queue has a\n     * region selection rule.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of regions that the match could be played in sorted by preference. This value is only set if the queue has a\nregion selection rule." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences = { "RegionPreferences", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchResult, RegionPreferences), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server that the match has been allocated to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server that the match has been allocated to." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchResult, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_MatchId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_Members,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_RegionPreferences,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::NewProp_ServerDetails,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerGetMatchResult",
		sizeof(FMultiplayerGetMatchResult),
		alignof(FMultiplayerGetMatchResult),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMatchResult"), sizeof(FMultiplayerGetMatchResult), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchResult_Hash() { return 2009142586U; }

static_assert(std::is_polymorphic<FMultiplayerGetMatchRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerGetMatchRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerGetMatchRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerGetMatchRequest"), sizeof(FMultiplayerGetMatchRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerGetMatchRequest>()
{
	return FMultiplayerGetMatchRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerGetMatchRequest(FMultiplayerGetMatchRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerGetMatchRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerGetMatchRequest>(FName(TEXT("MultiplayerGetMatchRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerGetMatchRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_EscapeObject_MetaData[];
#endif
		static void NewProp_EscapeObject_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_EscapeObject;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MatchId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_MatchId;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ReturnMemberAttributes_MetaData[];
#endif
		static void NewProp_ReturnMemberAttributes_SetBit(void* Obj);
		static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnMemberAttributes;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an Id. The match\n * contains all of the players that were matched together, and their team assigments. Only servers and ticket members can\n * get the match.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "When matchmaking has successfully matched together a collection of tickets, it produces a 'match' with an Id. The match\ncontains all of the players that were matched together, and their team assigments. Only servers and ticket members can\nget the match." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerGetMatchRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/**\n     * Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\n     * object.\n     */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes will be returned as an escaped JSON string or as an un-escaped JSON\nobject." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchRequest*)Obj)->EscapeObject = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject = { "EscapeObject", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetMatchRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId = { "MatchId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchRequest, MatchId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue to join. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue to join." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerGetMatchRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** Determines whether the matchmaking attributes for each user should be returned in the response for match request. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Determines whether the matchmaking attributes for each user should be returned in the response for match request." },
	};
#endif
	void Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_SetBit(void* Obj)
	{
		((FMultiplayerGetMatchRequest*)Obj)->ReturnMemberAttributes = 1;
	}
	const UE4CodeGen_Private::FBoolPropertyParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes = { "ReturnMemberAttributes", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Bool | UE4CodeGen_Private::EPropertyGenFlags::NativeBool, RF_Public|RF_Transient|RF_MarkAsNative, 1, sizeof(bool), sizeof(FMultiplayerGetMatchRequest), &Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_SetBit, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_EscapeObject,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_MatchId,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::NewProp_ReturnMemberAttributes,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerGetMatchRequest",
		sizeof(FMultiplayerGetMatchRequest),
		alignof(FMultiplayerGetMatchRequest),
		Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerGetMatchRequest"), sizeof(FMultiplayerGetMatchRequest), Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerGetMatchRequest_Hash() { return 4087409139U; }

static_assert(std::is_polymorphic<FMultiplayerCreateServerMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateServerMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerMatchmakingTicketRequest"), sizeof(FMultiplayerCreateServerMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerMatchmakingTicketRequest>()
{
	return FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest(FMultiplayerCreateServerMatchmakingTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateServerMatchmakingTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerMatchmakingTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerMatchmakingTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateServerMatchmakingTicketRequest>(FName(TEXT("MultiplayerCreateServerMatchmakingTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerMatchmakingTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The server specifies all the members and their attributes. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server specifies all the members and their attributes." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The users who will be part of this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The users who will be part of this ticket." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_Members,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateServerMatchmakingTicketRequest",
		sizeof(FMultiplayerCreateServerMatchmakingTicketRequest),
		alignof(FMultiplayerCreateServerMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateServerMatchmakingTicketRequest"), sizeof(FMultiplayerCreateServerMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerMatchmakingTicketRequest_Hash() { return 2535191695U; }

static_assert(std::is_polymorphic<FMultiplayerCreateServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateServerBackfillTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerBackfillTicketResult"), sizeof(FMultiplayerCreateServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerBackfillTicketResult>()
{
	return FMultiplayerCreateServerBackfillTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult(FMultiplayerCreateServerBackfillTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateServerBackfillTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateServerBackfillTicketResult>(FName(TEXT("MultiplayerCreateServerBackfillTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerBackfillTicketResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateServerBackfillTicketResult",
		sizeof(FMultiplayerCreateServerBackfillTicketResult),
		alignof(FMultiplayerCreateServerBackfillTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateServerBackfillTicketResult"), sizeof(FMultiplayerCreateServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketResult_Hash() { return 1879094420U; }

static_assert(std::is_polymorphic<FMultiplayerCreateServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateServerBackfillTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateServerBackfillTicketRequest"), sizeof(FMultiplayerCreateServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateServerBackfillTicketRequest>()
{
	return FMultiplayerCreateServerBackfillTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest(FMultiplayerCreateServerBackfillTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateServerBackfillTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateServerBackfillTicketRequest>(FName(TEXT("MultiplayerCreateServerBackfillTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateServerBackfillTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Members_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Members_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Members;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ServerDetails_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ServerDetails;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The server specifies all the members, their teams and their attributes, and the server details if applicable. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The server specifies all the members, their teams and their attributes, and the server details if applicable." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_Inner = { "Members", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The users who will be part of this ticket, along with their team assignments. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The users who will be part of this ticket, along with their team assignments." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members = { "Members", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, Members), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The details of the server the members are connected to. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The details of the server the members are connected to." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails = { "ServerDetails", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateServerBackfillTicketRequest, ServerDetails), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_Members,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::NewProp_ServerDetails,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateServerBackfillTicketRequest",
		sizeof(FMultiplayerCreateServerBackfillTicketRequest),
		alignof(FMultiplayerCreateServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateServerBackfillTicketRequest"), sizeof(FMultiplayerCreateServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateServerBackfillTicketRequest_Hash() { return 3544102644U; }

static_assert(std::is_polymorphic<FMultiplayerCreateMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCreateMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateMatchmakingTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateMatchmakingTicketResult"), sizeof(FMultiplayerCreateMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateMatchmakingTicketResult>()
{
	return FMultiplayerCreateMatchmakingTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult(FMultiplayerCreateMatchmakingTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateMatchmakingTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateMatchmakingTicketResult>(FName(TEXT("MultiplayerCreateMatchmakingTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateMatchmakingTicketResult>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketResult, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCreateMatchmakingTicketResult",
		sizeof(FMultiplayerCreateMatchmakingTicketResult),
		alignof(FMultiplayerCreateMatchmakingTicketResult),
		Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateMatchmakingTicketResult"), sizeof(FMultiplayerCreateMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketResult_Hash() { return 3981142236U; }

static_assert(std::is_polymorphic<FMultiplayerCreateMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCreateMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCreateMatchmakingTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCreateMatchmakingTicketRequest"), sizeof(FMultiplayerCreateMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCreateMatchmakingTicketRequest>()
{
	return FMultiplayerCreateMatchmakingTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest(FMultiplayerCreateMatchmakingTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCreateMatchmakingTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCreateMatchmakingTicketRequest>(FName(TEXT("MultiplayerCreateMatchmakingTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCreateMatchmakingTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Creator_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Creator;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_GiveUpAfterSeconds_MetaData[];
#endif
		static const UE4CodeGen_Private::FIntPropertyParams NewProp_GiveUpAfterSeconds;
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_MembersToMatchWith_Inner;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_MembersToMatchWith_MetaData[];
#endif
		static const UE4CodeGen_Private::FArrayPropertyParams NewProp_MembersToMatchWith;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/** The client specifies the creator's attributes and optionally a list of other users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The client specifies the creator's attributes and optionally a list of other users to match with." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCreateMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The User who created this ticket. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The User who created this ticket." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator = { "Creator", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, Creator), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** How long to attempt matching this ticket in seconds. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "How long to attempt matching this ticket in seconds." },
	};
#endif
	const UE4CodeGen_Private::FIntPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds = { "GiveUpAfterSeconds", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Int, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, GiveUpAfterSeconds), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds_MetaData)) };
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_Inner = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0000000000000000, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, 0, Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** A list of Entity Keys of other users to match with. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "A list of Entity Keys of other users to match with." },
	};
#endif
	const UE4CodeGen_Private::FArrayPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith = { "MembersToMatchWith", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Array, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, MembersToMatchWith), EArrayPropertyFlags::None, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of a match queue. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of a match queue." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCreateMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_Creator,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_GiveUpAfterSeconds,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith_Inner,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_MembersToMatchWith,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCreateMatchmakingTicketRequest",
		sizeof(FMultiplayerCreateMatchmakingTicketRequest),
		alignof(FMultiplayerCreateMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCreateMatchmakingTicketRequest"), sizeof(FMultiplayerCreateMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCreateMatchmakingTicketRequest_Hash() { return 1738207670U; }

static_assert(std::is_polymorphic<FMultiplayerCancelServerBackfillTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelServerBackfillTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelServerBackfillTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelServerBackfillTicketResult"), sizeof(FMultiplayerCancelServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelServerBackfillTicketResult>()
{
	return FMultiplayerCancelServerBackfillTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult(FMultiplayerCancelServerBackfillTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelServerBackfillTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelServerBackfillTicketResult>(FName(TEXT("MultiplayerCancelServerBackfillTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelServerBackfillTicketResult>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelServerBackfillTicketResult",
		sizeof(FMultiplayerCancelServerBackfillTicketResult),
		alignof(FMultiplayerCancelServerBackfillTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelServerBackfillTicketResult"), sizeof(FMultiplayerCancelServerBackfillTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketResult_Hash() { return 1865510162U; }

static_assert(std::is_polymorphic<FMultiplayerCancelServerBackfillTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelServerBackfillTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelServerBackfillTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelServerBackfillTicketRequest"), sizeof(FMultiplayerCancelServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelServerBackfillTicketRequest>()
{
	return FMultiplayerCancelServerBackfillTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest(FMultiplayerCancelServerBackfillTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelServerBackfillTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelServerBackfillTicketRequest>(FName(TEXT("MultiplayerCancelServerBackfillTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelServerBackfillTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Only servers can cancel a backfill ticket. The ticket can be in three different states when it is cancelled. 1: the\n * ticket is matching. If the ticket is cancelled, it will stop matching. 2: the ticket is matched. A matched ticket cannot\n * be cancelled. 3: the ticket is already cancelled and nothing happens. There may be race conditions between the ticket\n * getting matched and the server making a cancellation request. The server must handle the possibility that the cancel\n * request fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\n * ticket. Create a new ticket instead.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Only servers can cancel a backfill ticket. The ticket can be in three different states when it is cancelled. 1: the\nticket is matching. If the ticket is cancelled, it will stop matching. 2: the ticket is matched. A matched ticket cannot\nbe cancelled. 3: the ticket is already cancelled and nothing happens. There may be race conditions between the ticket\ngetting matched and the server making a cancellation request. The server must handle the possibility that the cancel\nrequest fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\nticket. Create a new ticket instead." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelServerBackfillTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the ticket is in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the ticket is in." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelServerBackfillTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelServerBackfillTicketRequest",
		sizeof(FMultiplayerCancelServerBackfillTicketRequest),
		alignof(FMultiplayerCancelServerBackfillTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelServerBackfillTicketRequest"), sizeof(FMultiplayerCancelServerBackfillTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelServerBackfillTicketRequest_Hash() { return 673613613U; }

static_assert(std::is_polymorphic<FMultiplayerCancelMatchmakingTicketResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelMatchmakingTicketResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelMatchmakingTicketResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelMatchmakingTicketResult"), sizeof(FMultiplayerCancelMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelMatchmakingTicketResult>()
{
	return FMultiplayerCancelMatchmakingTicketResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult(FMultiplayerCancelMatchmakingTicketResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelMatchmakingTicketResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelMatchmakingTicketResult>(FName(TEXT("MultiplayerCancelMatchmakingTicketResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelMatchmakingTicketResult>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelMatchmakingTicketResult",
		sizeof(FMultiplayerCancelMatchmakingTicketResult),
		alignof(FMultiplayerCancelMatchmakingTicketResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelMatchmakingTicketResult"), sizeof(FMultiplayerCancelMatchmakingTicketResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketResult_Hash() { return 2298944092U; }

static_assert(std::is_polymorphic<FMultiplayerCancelMatchmakingTicketRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelMatchmakingTicketRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelMatchmakingTicketRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelMatchmakingTicketRequest"), sizeof(FMultiplayerCancelMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelMatchmakingTicketRequest>()
{
	return FMultiplayerCancelMatchmakingTicketRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest(FMultiplayerCancelMatchmakingTicketRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelMatchmakingTicketRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelMatchmakingTicketRequest>(FName(TEXT("MultiplayerCancelMatchmakingTicketRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelMatchmakingTicketRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_TicketId_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_TicketId;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Only servers and ticket members can cancel a ticket. The ticket can be in five different states when it is cancelled. 1:\n * the ticket is waiting for members to join it, and it has not started matching. If the ticket is cancelled at this stage,\n * it will never match. 2: the ticket is matching. If the ticket is cancelled, it will stop matching. 3: the ticket is\n * matched. A matched ticket cannot be cancelled. 4: the ticket is already cancelled and nothing happens. 5: the ticket is\n * waiting for a server. If the ticket is cancelled, server allocation will be stopped. A server may still be allocated due\n * to a race condition, but that will not be reflected in the ticket. There may be race conditions between the ticket\n * getting matched and the client making a cancellation request. The client must handle the possibility that the cancel\n * request fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\n * ticket because players must consent to enter matchmaking again. Create a new ticket instead.\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Only servers and ticket members can cancel a ticket. The ticket can be in five different states when it is cancelled. 1:\nthe ticket is waiting for members to join it, and it has not started matching. If the ticket is cancelled at this stage,\nit will never match. 2: the ticket is matching. If the ticket is cancelled, it will stop matching. 3: the ticket is\nmatched. A matched ticket cannot be cancelled. 4: the ticket is already cancelled and nothing happens. 5: the ticket is\nwaiting for a server. If the ticket is cancelled, server allocation will be stopped. A server may still be allocated due\nto a race condition, but that will not be reflected in the ticket. There may be race conditions between the ticket\ngetting matched and the client making a cancellation request. The client must handle the possibility that the cancel\nrequest fails if a match is found before the cancellation request is processed. We do not allow resubmitting a cancelled\nticket because players must consent to enter matchmaking again. Create a new ticket instead." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelMatchmakingTicketRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue the ticket is in. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue the ticket is in." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The Id of the ticket to find a match for. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The Id of the ticket to find a match for." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId = { "TicketId", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelMatchmakingTicketRequest, TicketId), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_QueueName,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::NewProp_TicketId,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelMatchmakingTicketRequest",
		sizeof(FMultiplayerCancelMatchmakingTicketRequest),
		alignof(FMultiplayerCancelMatchmakingTicketRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelMatchmakingTicketRequest"), sizeof(FMultiplayerCancelMatchmakingTicketRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelMatchmakingTicketRequest_Hash() { return 3608560086U; }

static_assert(std::is_polymorphic<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelAllServerBackfillTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult"), sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>()
{
	return FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>(FName(TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerResult>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelAllServerBackfillTicketsForPlayerResult",
		sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult),
		alignof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerResult"), sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerResult_Hash() { return 2697563553U; }

static_assert(std::is_polymorphic<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest"), sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>()
{
	return FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>(FName(TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllServerBackfillTicketsForPlayerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Cancels all backfill tickets of which the player is a member in a given queue that are not cancelled or matched. This\n * API is useful if you lose track of what tickets the player is a member of (if the server crashes for instance) and want\n * to \"reset\".\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Cancels all backfill tickets of which the player is a member in a given queue that are not cancelled or matched. This\nAPI is useful if you lose track of what tickets the player is a member of (if the server crashes for instance) and want\nto \"reset\"." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key of the player whose backfill tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key of the player whose backfill tickets should be canceled." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue from which a player's backfill tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue from which a player's backfill tickets should be canceled." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelAllServerBackfillTicketsForPlayerRequest",
		sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest),
		alignof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelAllServerBackfillTicketsForPlayerRequest"), sizeof(FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest_Hash() { return 3386010326U; }

static_assert(std::is_polymorphic<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>() == std::is_polymorphic<FPlayFabResultCommon>(), "USTRUCT FMultiplayerCancelAllMatchmakingTicketsForPlayerResult cannot be polymorphic unless super FPlayFabResultCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult"), sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>()
{
	return FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerResult
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerResult()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>(FName(TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerResult;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerResult>();
	}
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabResultCommon,
		&NewStructOps,
		"MultiplayerCancelAllMatchmakingTicketsForPlayerResult",
		sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult),
		alignof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult),
		nullptr,
		0,
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerResult"), sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerResult), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerResult_Hash() { return 1222700392U; }

static_assert(std::is_polymorphic<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>() == std::is_polymorphic<FPlayFabRequestCommon>(), "USTRUCT FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest cannot be polymorphic unless super FPlayFabRequestCommon is polymorphic");

class UScriptStruct* FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PLAYFAB_API uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Hash();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, Z_Construct_UPackage__Script_PlayFab(), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest"), sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Hash());
	}
	return Singleton;
}
template<> PLAYFAB_API UScriptStruct* StaticStruct<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>()
{
	return FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct();
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest::StaticStruct, TEXT("/Script/PlayFab"), TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest"), false, nullptr, nullptr);
static struct FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerRequest
{
	FScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerRequest()
	{
		UScriptStruct::DeferCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>(FName(TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest")));
	}
} ScriptStruct_PlayFab_StaticRegisterNativesFMultiplayerCancelAllMatchmakingTicketsForPlayerRequest;
	struct Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics
	{
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[];
#endif
		static void* NewStructOps();
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_CustomTags_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_CustomTags;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Entity_MetaData[];
#endif
		static const UE4CodeGen_Private::FObjectPropertyParams NewProp_Entity;
#if WITH_METADATA
		static const UE4CodeGen_Private::FMetaDataPairParam NewProp_QueueName_MetaData[];
#endif
		static const UE4CodeGen_Private::FStrPropertyParams NewProp_QueueName;
		static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[];
		static const UE4CodeGen_Private::FStructParams ReturnStructParams;
	};
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams[] = {
		{ "BlueprintType", "true" },
		{ "Comment", "/**\n * Cancels all tickets of which the player is a member in a given queue that are not cancelled or matched. This API is\n * useful if you lose track of what tickets the player is a member of (if the title crashes for instance) and want to\n * \"reset\". The Entity field is optional if the caller is a player and defaults to that player. Players may not cancel\n * tickets for other people. The Entity field is required if the caller is a server (authenticated as the title).\n */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "Cancels all tickets of which the player is a member in a given queue that are not cancelled or matched. This API is\nuseful if you lose track of what tickets the player is a member of (if the title crashes for instance) and want to\n\"reset\". The Entity field is optional if the caller is a player and defaults to that player. Players may not cancel\ntickets for other people. The Entity field is required if the caller is a server (authenticated as the title)." },
	};
#endif
	void* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewStructOps()
	{
		return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest>();
	}
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.). */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The optional custom tags associated with the request (e.g. build number, external trace identifiers, etc.)." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags = { "CustomTags", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, CustomTags), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The entity key of the player whose tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The entity key of the player whose tickets should be canceled." },
	};
#endif
	const UE4CodeGen_Private::FObjectPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity = { "Entity", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Object, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, Entity), Z_Construct_UClass_UPlayFabJsonObject_NoRegister, METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity_MetaData)) };
#if WITH_METADATA
	const UE4CodeGen_Private::FMetaDataPairParam Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData[] = {
		{ "Category", "PlayFab | Multiplayer | Matchmaking Models" },
		{ "Comment", "/** The name of the queue from which a player's tickets should be canceled. */" },
		{ "ModuleRelativePath", "Classes/PlayFabMultiplayerModels.h" },
		{ "ToolTip", "The name of the queue from which a player's tickets should be canceled." },
	};
#endif
	const UE4CodeGen_Private::FStrPropertyParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName = { "QueueName", nullptr, (EPropertyFlags)0x0010000000000005, UE4CodeGen_Private::EPropertyGenFlags::Str, RF_Public|RF_Transient|RF_MarkAsNative, 1, STRUCT_OFFSET(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest, QueueName), METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName_MetaData)) };
	const UE4CodeGen_Private::FPropertyParamsBase* const Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers[] = {
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_CustomTags,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_Entity,
		(const UE4CodeGen_Private::FPropertyParamsBase*)&Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::NewProp_QueueName,
	};
	const UE4CodeGen_Private::FStructParams Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams = {
		(UObject* (*)())Z_Construct_UPackage__Script_PlayFab,
		Z_Construct_UScriptStruct_FPlayFabRequestCommon,
		&NewStructOps,
		"MultiplayerCancelAllMatchmakingTicketsForPlayerRequest",
		sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest),
		alignof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest),
		Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers,
		UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::PropPointers),
		RF_Public|RF_Transient|RF_MarkAsNative,
		EStructFlags(0x00000201),
		METADATA_PARAMS(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams, UE_ARRAY_COUNT(Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::Struct_MetaDataParams))
	};
	UScriptStruct* Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Hash();
		UPackage* Outer = Z_Construct_UPackage__Script_PlayFab();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MultiplayerCancelAllMatchmakingTicketsForPlayerRequest"), sizeof(FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest), Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Hash(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Statics::ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest_Hash() { return 3800994578U; }
PRAGMA_ENABLE_DEPRECATION_WARNINGS
#ifdef _MSC_VER
#pragma warning (pop)
#endif
